{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isTouchDevice","document","documentElement","$","body","addClass","mapDataPromise","countyDataPromise","stateDataPromise","stateData","countyData","usData","lastData","stateFeatures","stateBorders","countyFeatures","filters","state","field","time","useLog","per100k","consistentY","firstCasesDate","Date","lastCasesDate","tooltipValue","tooltipShown","tooltipHideTimer","isTestingData","dataPointLabels","cases","deaths","tests","positive","pending","negative","newCases","newDeaths","newTests","newPositive","newNegative","pop","keys","forEach","k","per100kKey","mapDataPointLabels","indexOf","replace","fieldHasMovingAverage","timeLabels","all","countyLabelToFips","populationOverrides","fipsRemapping","filterKeys","filterDefaults","parseQs","qs","query","substring","vars","split","obj","map","decodeURIComponent","v","router","hist","this","history","listen","parse","fetchAndRenderStates","fetchAndRenderCounties","firstParse","location","search","qsKey","undefined","val","prop","show","hide","text","_update","action","encodeURIComponent","join","getValueKeys","withTesting","valueKeys","processStates","csv","testingCsv","byFips","nestedStates","d3","entries","testingByFips","date","year","String","month","fips","Number","coerceNumber","total","positiveIncrease","negativeIncrease","totalTestResultsIncrease","forFips","getTime","console","error","popMap","processPopulations","processGroups","aggNytKeys","aggTestKeys","usValues","testsByDate","stateValuesAtDate","values","usValuesAtDate","dates","stateValueAtDate","usValueAtDate","usRawData","usRawTesting","assign","parseInt","groups","testingMap","group","newRows","prevRow","row","county","parsed","testing","positivePct","negativePct","pendingPct","newPositivePct","newNegativePct","p100kFactor","noPopulation","filterData","datesToShow","hasTestingData","allValueKeys","concat","maKeys","extents","extentKeys","maStartDate","setDate","getDate","dateAccessor","g","startDate","endDate","last","curDate","valuesIndex","sortedIndexBy","maWindows","isWithinRange","nextValue","matchingValue","maValues","arr","maKey","extent","maValue","filterGridData","memoizeOne","filterOverviewData","mapRenderCount","render","daysToShow","b","a","utc1","utc2","overview","isCounties","stateFips","UTC","getFullYear","getMonth","Math","floor","_MS_PER_DAY","nextDate","unshift","overviewData","gridData","options","$overview","node","getBoundingClientRect","width","height","$cell","select","selectAll","remove","useLarge","innerWidth","yAxisWidth","chartWidth","chartHeight","attr","renderCharts","allowDrilldown","cellLabelX","cellLabelY","barPad","renderOverview","$svg","chartXPadding","chartYPadding","estChartWidth","numCols","numStates","xAxisHeight","winWidth","colWidth","rowHeight","numRows","ceil","totalHeight","sortVal","lastVal","findLast","sort","enter","append","each","numColsForRow","range","col","classed","renderGrid","_mapRenderCount","then","us","topojson","objects","states","features","counties","fetchMapData","$map","mapWidth","mapHeight","projection","translate","scale","path","fieldTitle","timeTitle","$g","countyFeaturesFiltered","_stateFips","filter","f","id","stateFeaturesFiltered","hasMapData","Boolean","style","joinedData","hasTests","fields","label","newPending","feature","aggMapData","domain","min","colorScale","scaleCluster","mapColors","fillColor","datum","mapNoDataColor","clusters","$item","update","exit","css","formatNumNice","renderMapLegend","$states","transition","duration","isFirstMapRender","$counties","$features","onMouseEnter","evt","showTooltip","title","subtitle","fieldLabels","$backdrop","on","setStateFilter","stopPropagation","hideTooltipSoon","$gSel","bounds","xWidth","yHeight","xCenter","yCenter","max","renderMap","reverse","yScaleType","xScale","rangeRound","paddingInner","paddingOuter","barWidth","bandwidth","barXMidpoints","makeYScale","extentMin","nice","makeAxis","domainMax","numTicks","ticks","tickSizeInner","tickSizeOuter","tickFormat","yScale","yAxis","$cells","counter","index","stackFields","cellYScale","cellYAxis","maField","maExtent","stack","y","isNaN","xOffset","line","x","round","curve","$crosshair","$hover","onMouseMove","onClick","xPos","bisectIndex","left","right","abs","find","chPos","toLocaleString","day","formatTooltipDate","scrollTo","formatXDate","clearTimeout","pageX","pageY","clientY","top","bottom","transform","winHeight","innerHeight","bodyHeight","fitsLeft","fitsRight","fitsTop","fitsBottom","dataPoints","hasPercents","columnClass","color","pct","dp","suffix","formatter","formatPer100kValue","dataPointEl","format","formatTooltipValue","dpValue","pctFmt","drilldownMsg","toggleClass","html","setTimeout","hideTooltip","removeClass","precision","abbrev","parseFloat","toPrecision","tooltipFmtPer100k","tooltipFmtPer100kSmall","tooltipFmt","selector","el","querySelector","scrollIntoView","behavior","block","resizeWindow","throttle","fetchCountyData","Promise","stateMap","countyPop","byCounty","countiesForState","addEventListener","stateOptions","localeCompare","change","click","is"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,OAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,OAAO,IAEtBM,I,shEC5IT,WAAa,QACL0C,EAAgB,iBAAkBC,SAASC,gBAC7CF,GACFG,KAAEF,SAASG,MAAMC,SAAS,SAI5B,IA4BIC,EACAC,EACAC,EA9BAC,EAAY,KACZC,EAAa,KACbC,EAAS,KACTC,EAAW,KAGXC,EAAgB,KAChBC,EAAe,KACfC,EAAiB,KAGfC,EAAU,CACdC,MAAO,MACPC,MAAO,WACPC,KAAM,MACNC,QAAQ,EACRC,SAAS,EACTC,aAAa,GAIXC,EAAiB,IAAIC,KAAK,KAAM,EAAG,IACnCC,EAAgB,KAChBC,EAAe,KACfC,EAAe,KACfC,EAAmB,KACnBC,GAAgB,EAUdC,EAAkB,CACtBC,MAAO,cACPC,OAAQ,eACRC,MAAO,cACPC,SAAU,iBACVC,QAAS,gBACTC,SAAU,iBACVC,SAAU,YACVC,UAAW,aACXC,SAAU,YACVC,YAAa,eACbC,YAAa,eACbC,IAAK,mBAEP/F,OAAOgG,KAAKb,GAAiBc,QAAQ,SAACC,GACpCf,EAAgBgB,EAAWD,IAAMf,EAAgBe,KAInD,IAAME,EAAqB,GAAH,GAAOjB,GAC/BnF,OAAOgG,KAAKI,GAAoBH,QAAQ,SAACtD,GACZ,IAAvBA,EAAI0D,QAAQ,SACdD,EAAmBzD,GAAnB,cAAiCyD,EAAmBzD,GAAK2D,QAAQ,MAAO,aAI5E,IAAMC,GAAqB,MACzBb,UAAU,EACVC,WAAW,GACVQ,EAAW,aAAc,GAHD,KAIxBA,EAAW,cAAe,GAJF,GAOrBK,EAAa,CACjB,KAAM,cACN,MAAO,eACP,MAAO,eACPC,IAAK,YAQDC,EAAoB,CACxB,gBAAiB,QACjB,cAL4B,SAQxBC,GAAmB,QARK,QAaH,QALF,KAOvB,QAAS,QAPc,KASvB,QAAS,QATc,KAWvB,QAAS,QAXc,KAavB,QAAS,OAbc,KAgBvB,QAAS,SAhBc,GAmBnBC,EAAgB,CAEpB,MAAS,QAET,MAAS,QAET,MAAS,QAET,MAAS,SAOLC,EAAa,CACjBvC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,MACRC,QAAS,UACTC,YAAa,eAETmC,EAAiB,CACrBxC,MAAO,MACPC,MAAO,WACPC,KAAM,MACNC,QAAQ,EACRC,SAAS,EACTC,aAAa,GA8Gf,SAASoC,EAAQC,GAIf,IAHA,IAAMC,EAAkB,MAAVD,EAAG,GAAaA,EAAGE,UAAU,GAAKF,EAC1CG,EAAOF,EAAQA,EAAMG,MAAM,KAAO,GAClCC,EAAM,GACHxH,EAAI,EAAGA,EAAIsH,EAAKpH,OAAQF,IAAK,UACrBsH,EAAKtH,GAAGuH,MAAM,KAAKE,IAAIC,oBADF,GAC7BrB,EAD6B,KAC1BsB,EAD0B,KAEpCH,EAAInB,GAAKsB,EAEX,OAAOH,EAUT,IAAMI,EAAS,IA7QJ,WAiJT,WAAYC,GAAM,Y,4FAAA,SAChBC,KAAKC,QAAUF,EACfC,KAAKC,QAAQC,OAAO,WAElB,EAAKC,QACiB,QAAlBzD,EAAQC,MACVyD,KAEAC,GAAuB3D,EAAQC,S,UAzJ5B,O,EAAA,G,EAAA,gCAkKP,IAJwB,IAApB2D,EAAoB,6BA9JjB,KA+JDjB,EAAKD,EAAQY,KAAKC,QAAQM,SAASC,QACnCnC,EAAOhG,OAAOgG,KAAKa,GAEhBhH,EAAI,EAAGA,EAAImG,EAAKjG,OAAQF,IAAK,CACpC,IAAMqG,EAAIF,EAAKnG,GACTuI,EAAQvB,EAAWX,GACrBsB,EAAiBa,MAAbrB,EAAGoB,GAAsBpB,EAAGoB,GAAStB,EAAeZ,GAK5D,GAHiC,kBAAtBY,EAAeZ,IAAiC,iBAANsB,IACnDA,EAAU,MAANA,GAEFnD,EAAQ6B,KAAOsB,GAAMS,EAGzB,OAAQ/B,GACN,IAAK,QAEHsB,EAAIA,EAAElB,QAAQ,IAAK,KACnBjC,EAAQC,MAAQkD,EAChBhE,KAAE,iBAAiB8E,IAAId,GACvB,MAEF,IAAK,QACCrC,EAAgBqC,KAClBnD,EAAQE,MAAQiD,EAChBhE,KAAE,iBAAiB8E,IAAId,IAEvBtC,EAAkC,UAAlBb,EAAQE,OAAuC,aAAlBF,EAAQE,QAGnDF,EAAQI,QAAS,EACjBjB,KAAE,qBAAqB+E,KAAK,WAAW,GACvCvB,EAAGH,EAAWpC,QAAU,IAExBjB,KAAE,mBAAmBgF,OACrBhF,KAAE,yBAAyBiF,SAE3BjF,KAAE,mBAAmBiF,OACrBjF,KAAE,yBAAyBgF,QAEnB,aAANhB,GAA0B,cAANA,GACtBhE,KAAE,kCAAkCkF,KAAKvD,EAAgBqC,IACzDhE,KAAE,cAAcgF,QAEhBhF,KAAE,cAAciF,QAGpB,MAEF,IAAK,OACHpE,EAAQG,KAAOgD,EACfhE,KAAE,gBAAgB8E,IAAId,GACtB,MAEF,IAAK,SACHnD,EAAQI,OAAS+C,EACjBhE,KAAE,qBAAqB+E,KAAK,UAAWf,GACvC,MAEF,IAAK,UACHnD,EAAQK,QAAU8C,EAClBhE,KAAE,gBAAgB+E,KAAK,UAAWf,GAClC,MAEF,IAAK,cACHnD,EAAQM,YAAc6C,EACtBhE,KAAE,oBAAoB+E,KAAK,UAAWf,OAjOrC,2BAwOJH,GACHM,KAAKgB,QAAQ,OAAQtB,KAzOd,8BA4ODA,GACNM,KAAKgB,QAAQ,UAAWtB,KA7OjB,8BAgPDuB,EAAQvB,GACd,IAoBiBA,EACbzG,EArBEqG,EAAQ,GAAH,GACNF,EAAQY,KAAKC,QAAQM,SAASC,QADxB,GAENd,GAELM,KAAKC,QAAQgB,GAAQ,CACnBT,QAeed,EAfKJ,GAgBlBrG,EAASZ,OAAOgG,KAAKqB,GACxBC,IAAI,SAACpB,GACJ,gBAAU2C,mBAAmB3C,GAA7B,YAAmC2C,mBAAmBxB,EAAInB,OAE3D4C,KAAK,MACQ,IAAH,OAAOlI,GAAW,W,6BA3QtB,KA6QI,CAAWgH,QAO1B,SAASmB,EAAaC,GACpB,IAAMC,EAAY,CAAC,QAAS,SAAU,WAAY,aAYlD,OAXID,GACFC,EAAU5I,KACR,WACA,WACA,UACA,QACA,cACA,cACA,YAGG4I,EAGT,SAASC,EAAcC,EAAKpD,EAAKqD,GAC/B,IAwEMC,EAxEAC,EAAeC,UAElB5G,IAAI,SAACuD,GAAD,OAAOA,EAAE5B,QACbkF,QAAQL,GAELM,GAmEAJ,EAAS,GAnE0BD,EAoErCnD,QAAQ,SAACvE,GACX,GAAKA,EAAEgI,KAAP,CAGA,IAAMC,EAAOC,OAAOlI,EAAEgI,MAAMxC,UAAU,EAAG,GACnC2C,EAAQD,OAAOlI,EAAEgI,MAAMxC,UAAU,EAAG,GACpCwC,EAAOE,OAAOlI,EAAEgI,MAAMxC,UAAU,EAAG,GACnC4C,EAAOpI,EAAEoI,KAETzH,EAAQ,CACZyH,KAAMA,GAAQ,GACdJ,KAAM,IAAI7E,KAAKkF,OAAOJ,GAAOI,OAAOF,GAAS,EAAGE,OAAOL,IACvDnE,SAAUyE,EAAatI,EAAE6D,UACzBE,SAAUuE,EAAatI,EAAE+D,UACzBD,QAASwE,EAAatI,EAAE8D,SACxBF,MAAO0E,EAAatI,EAAEuI,OACtBpE,YAAamE,EAAatI,EAAEwI,kBAC5BpE,YAAakE,EAAatI,EAAEyI,kBAC5BvE,SAAUoE,EAAatI,EAAE0I,2BAItBf,EAAOS,KACVT,EAAOS,GAAQ,IAEjB,IAAMO,EAAUhB,EAAOS,GACnBO,EAAQhI,EAAMqH,KAAKY,YACrBC,QAAQC,MAAR,6CAA4D9I,GAE9D2I,EAAQhI,EAAMqH,KAAKY,WAAajI,KAG3BgH,GAlGDoB,EAASC,EAAmB3E,GAClCjC,EAAY6G,EAAcrB,EAAcmB,EAAQhB,GATL,IAe1BN,EAAKM,EAChBmB,EACAC,EAgBAC,EAkBAC,EAnDqC,MAe1B5B,EAJ2BA,EAItBM,EAJ2BA,EAK3CmB,EAAa,CAAC,QAAS,UACvBC,EAAc,CAClB,WACA,WACA,UACA,QACA,cACA,cACA,YASIC,EALSvB,UAEZ5G,IAAI,SAACuD,GAAD,OAAOA,EAAEwD,OACbF,QAAQL,GAEa7B,IAAI,SAACzE,GAC3B,IAAMmI,EAAoBnI,EAAEoI,OACtBC,EAAiB,CACrBpB,KAAM,KACNJ,KAAMsB,EAAkB,GAAGtB,MAU7B,OARAsB,EAAkB/E,QAAQ,SAAC3B,GACzBsG,EAAW3E,QAAQ,SAACtD,GACbuI,EAAevI,KAClBuI,EAAevI,GAAO,GAExBuI,EAAevI,IAAQoH,OAAOzF,EAAM3B,QAGjCuI,IAIHH,EAAc,GACpB/K,OAAOgG,KAAKyD,GAAexD,QAAQ,SAAC6D,GAClC,IAAMqB,EAAQ1B,EAAcK,GAC5B9J,OAAOgG,KAAKmF,GAAOlF,QAAQ,SAACyD,GACrBqB,EAAYrB,KACfqB,EAAYrB,GAAQ,IAEtB,IAAM0B,EAAmBD,EAAMzB,GACzB2B,EAAgBN,EAAYrB,GAClCmB,EAAY5E,QAAQ,SAACtD,GACd0I,EAAc1I,KACjB0I,EAAc1I,GAAO,GAEvB0I,EAAc1I,IAAQyI,EAAiBzI,IAAQ,QAK9C,CAAC,CAAC,CAACA,IAAK,gBAAiBsI,OAAQH,IAAY,CAAC,KAAMC,KArEhB,GAWpCO,EAXoC,KAWzBC,EAXyB,KAY3CvH,EAAS2G,EAAcW,EAAWb,EAAQc,GAiG5C,SAASvB,EAAa3H,GACpB,OAAgBgG,MAAThG,EAAqB,KAAO0H,OAAO1H,GAyB5C,SAASqI,EAAmB3E,GAC1B,IAAMuB,EAAMtH,OAAOwL,OAAO,GAAI7E,GAS9B,OARAZ,EAAIE,QAAQ,SAACjD,GACX,IAAM8G,EAAOlD,EAAc5D,EAAE8G,OAAS9G,EAAE8G,KACpCnD,EAAoBmD,GACtBxC,EAAIwC,GAAQnD,EAAoBmD,GAEhCxC,EAAIwC,GAAQ2B,SAASzI,EAAE+C,OAGpBuB,EAGT,SAASqD,EAAce,EAAQjB,EAAQkB,GACrC,IAAM1C,EAAYF,IAAe4C,GAoEjC,OAlEAD,EAAOzF,QAAQ,SAAC2F,GAEd,IADA,IAAMC,EAAU,GADQ,WAEfhM,GACP,IAAMiM,EAAUF,EAAMX,OAAOpL,EAAI,GAC3BkM,EAAMH,EAAMX,OAAOpL,GAJH,KAKMkM,EAAIrC,KAAKtC,MAAM,KALrB,GAKfuC,EALe,KAKTE,EALS,KAKFH,EALE,KAOlBI,EAAOiC,EAAIjC,MACVA,GAAQiC,EAAIC,SACflC,EAAOpD,EAAkBqF,EAAIC,SAG/B,IAAMC,EAAS,GAAH,GACPF,EADO,CAEVjC,OACAJ,KAAM,IAAI7E,KAAKkF,OAAOJ,GAAOI,OAAOF,GAAS,EAAGE,OAAOL,IACvDtE,MAAO2E,OAAOgC,EAAI3G,OAClBC,OAAQ0E,OAAOgC,EAAI1G,UAEjByG,GACFG,EAAOvG,SAAWuG,EAAO7G,MAAQ0G,EAAQ1G,MACzC6G,EAAOtG,UAAYsG,EAAO5G,OAASyG,EAAQzG,SAE3C4G,EAAOvG,SAAWuG,EAAO7G,MACzB6G,EAAOtG,UAAYsG,EAAO5G,QAE5BwG,EAAQxL,KAAK4L,GAGb,IAAMC,IAAYP,EAAaA,EAAWM,EAAOnC,MAAQ,KAAO,IAAImC,EAAOvC,KAAKY,WAC5E4B,IACFD,EAAO1G,SAAW2G,EAAQ3G,SAC1B0G,EAAOE,YAAcD,EAAQ3G,SAAW2G,EAAQ5G,MAChD2G,EAAOxG,SAAWyG,EAAQzG,SAC1BwG,EAAOG,YAAcF,EAAQzG,SAAWyG,EAAQ5G,MAChD2G,EAAOzG,QAAU0G,EAAQ1G,QACzByG,EAAOI,WAAaH,EAAQ1G,QAAU0G,EAAQ5G,MAC9C2G,EAAO3G,MAAQ4G,EAAQ5G,MACvB2G,EAAOpG,YAAcqG,EAAQrG,YAC7BoG,EAAOK,eAAiBJ,EAAQrG,YAAcqG,EAAQtG,SACtDqG,EAAOnG,YAAcoG,EAAQpG,YAC7BmG,EAAOM,eAAiBL,EAAQpG,YAAcoG,EAAQtG,SACtDqG,EAAOrG,SAAWsG,EAAQtG,UAI5B,IAAMG,EAAM0E,EAAOwB,EAAOnC,MAC1B,GAAI/D,EAAK,CAEP,IAAMyG,GADNP,EAAOlG,IAAMA,GACa,IAC1BkD,EAAUhD,QAAQ,SAACtD,GACU,iBAAhBsJ,EAAOtJ,KAChBsJ,EAAO9F,EAAWxD,IAAQsJ,EAAOtJ,GAAO6J,UAI5CZ,EAAMa,cAAe,GAGD,OAAlB3H,GAA0BmH,EAAOvC,KAAKY,UAAYxF,EAAcwF,aAClExF,EAAgBmH,EAAOvC,OA1DlB7J,EAAI,EAAGA,EAAI+L,EAAMX,OAAOlL,OAAQF,IAAK,EAArCA,GA6DT+L,EAAMX,OAASY,IAGVH,EAGT,SAASgB,EAAWhB,EAAQiB,EAAaC,GACvC,IAAM3D,EAAYF,EAAa6D,GACzBC,EAAe5D,EAAU6D,OAAO7D,EAAU3B,IAAInB,IAGhD4G,EAAS,CAAC,WAAY,aAC1BA,EAASA,EAAOD,OAAOC,EAAOzF,IAAInB,IAElC,IAAM6G,EAAU,GACVC,EAAa,CAAC,QAAQH,OAAOD,GACnCI,EAAWhH,QAAQ,SAACtD,GAAD,OAAUqK,EAAQrK,GAAO,CAAC,KAAM,QAEnD,IAAMuK,EAAc,IAAIrI,KAAK8H,EAAY,IACzCO,EAAYC,QAAQD,EAAYE,UA1bd,GA4bG,SAAfC,EAAgB7F,GAAD,OAAOA,EAAEkC,KAAKY,UAyGnC,MAAO,CAACoB,OAvGUA,EAAOpE,IAAI,SAACgG,GAAM,IAC3BrC,EAAUqC,EAAVrC,OACDY,EAAU,GAGZ0B,EAAYZ,EAAY,GACxBa,EAAUC,EAAKd,GAEfe,EAAU,IAAI7I,KAAKqI,GAGnBS,EAAcC,KAAc3C,EAAQ,CAACvB,KAAMwD,GAAcG,GAGzDQ,EAAY,GAChBd,EAAO9G,QAAQ,SAACtD,GACdkL,EAAUlL,GAAO,KAGnB,IAnBkC,iBAqBhC,IAAImL,EAAgBJ,EAAQpD,WAAaiD,EAAUjD,UAG/CyD,EAAY9C,EAAO0C,GACnBK,EACFD,GAAaA,EAAUrE,KAAKY,YAAcoD,EAAQpD,UAAYyD,EAAY,KAGxEE,EAAW,GACflB,EAAO9G,QAAQ,SAACtD,GACd,IAAMuL,EAAML,EAAUlL,GA7dV,IA8dRuL,EAAInO,QACNmO,EAAI1N,QAGFwN,GAA+C,iBAAvBA,EAAcrL,GACxCuL,EAAI7N,KAAK0N,EAAUpL,IAEnBuL,EAAI7N,KAAK,GAGX4N,EAASE,EAAMxL,IAAQ4G,QAAQ2E,KAI7BJ,IACEE,EACFnC,EAAQxL,KAAKL,OAAOwL,OAAO,GAAIwC,EAAeC,IAI9CpC,EAAQxL,KACNL,OAAOwL,OACL,CACE9B,KAAM,IAAI7E,KAAK6I,GACf5D,KAAMmB,EAAO,GAAGnB,KAChB/D,IAAKkF,EAAO,GAAGlF,IACfzB,MAAO2G,EAAO,GAAG3G,MACjB0H,OAAQf,EAAO,GAAGe,QAEpBiC,KAOJD,GACFL,IAIFD,EAAQP,QAAQO,EAAQN,UAAY,IAtD/BM,EAAQpD,WAAakD,EAAQlD,WAAW,IA8E/C,OApBAuB,EAAQ5F,QAAQ,SAAC8F,GACfkB,EAAWhH,QAAQ,SAACtD,GAClB,IAAMyL,EAASpB,EAAQrK,GACjBN,EAAQ0J,EAAIpJ,GAQlB,GAPa0F,MAAThG,IAAqC,OAAd+L,EAAO,IAAe/L,EAAQ+L,EAAO,MAC9DA,EAAO,GAAK/L,GAEDgG,MAAThG,IAAqC,OAAd+L,EAAO,IAAe/L,EAAQ+L,EAAO,MAC9DA,EAAO,GAAK/L,GAGVkE,EAAsB5D,GAAM,CAC9B,IAAM0L,EAAUtC,EAAIoC,EAAMxL,IACX0F,MAAXgG,IAAuC,OAAdD,EAAO,IAAeC,EAAUD,EAAO,MAClEA,EAAO,GAAKC,QAMpB,MACKf,EADL,CAEErC,OAAQY,MAIemB,WA1W7BvF,EAAOK,OAAM,GA6Wb,IAAMwG,EAAiBC,aAAW7B,GAC5B8B,EAAqBD,aAAW7B,GAEtC,SAASvG,EAAWxD,GAClB,gBAAUA,EAAV,UAGF,SAASwL,EAAMxL,GACb,gBAAUA,EAAV,OAGF,SAAS8K,EAAKS,GACZ,OAAOA,EAAIA,EAAInO,OAAS,GAG1B,IAAI0O,EAAiB,EACrB,SAASC,EAAOnP,GAAM,IAMhBoP,EAksBkBC,EAAGC,EACnBC,EACAC,EAxsBCrD,GADPzH,EAAW1E,GACJmM,OAAQsD,EAAmCzP,EAAnCyP,SAAUC,EAAyB1P,EAAzB0P,WAAYC,EAAa3P,EAAb2P,UAE/B3K,EAAQF,EAAQK,QAAUyB,EAAW9B,EAAQE,OAASF,EAAQE,MAIlEoK,EADmB,OAAjBtK,EAAQG,KACG,EACa,QAAjBH,EAAQG,KACJ,GACa,QAAjBH,EAAQG,KACJ,IA4rBOoK,EA1rBQ9J,EA0rBL+J,EA1rBoBjK,EA2rBvCkK,EAAOjK,KAAKsK,IAAIN,EAAEO,cAAeP,EAAEQ,WAAYR,EAAEzB,WACjD2B,EAAOlK,KAAKsK,IAAIP,EAAEQ,cAAeR,EAAES,WAAYT,EAAExB,WAChDkC,KAAKC,OAAOR,EAAOD,GAAQU,IA1rBlC,IADA,IAAM7C,EAAc,CAAC7H,GACZjF,EAAI,EAAGA,EAAI8O,EAAY9O,IAAK,CACnC,IAAM4P,EAAW,IAAI5K,KAAKC,GAC1B2K,EAAStC,QAAQrI,EAAcsI,UAAYvN,GAC3C8M,EAAY+C,QAAQD,GAGtB,GAAIR,GAAc/J,EAGhB,OAFA1B,KAAE,QAAQiF,YACVjF,KAAE,6BAA6BgF,OAG/BhF,KAAE,QAAQgF,OACVhF,KAAE,6BAA6BiF,OAGjC,IAAMkH,EAAenB,EAAmBQ,EAAUrC,GAAa,GACzDiD,EAAWtB,EAAe5C,EAAQiB,GAAcsC,GAEhDY,EAAU,CACdtL,QACAoK,aACAhC,cACAsC,aACAC,cA2RJ,SAAwB3P,EAAMsQ,GAC5B,IAAMC,EAAYvG,UAAU,iBADS,EAEbuG,EAAUC,OAAOC,wBAAlCC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,OAERC,EAAQL,EAAUM,OAAO,UAC/BD,EAAME,UAAU,KAAKC,SAErB,IAAMC,EAAgC,MAArBrN,OAAOsN,WAClBC,EAAaF,EAAW,GAAK,GAK7BG,EAAaT,EAAQQ,EAHP,GAIdE,EAAcT,GALAK,EAAW,GAAK,IAOpCJ,EAAMS,KAAK,YAAX,oBAAqCH,EAArC,SAEAI,EAAaf,EAAWvQ,EAAZ,MACPsQ,EADO,CAEViB,gBAAgB,EAChBJ,aACAC,cACAI,WAZiB,EAajBC,WAZiB,EAajBC,OAAQ,KAjTVC,CAAevB,EAAcE,GAqT/B,SAAoBtQ,EAAMsQ,GAAS,IAC1BtL,EAAqBsL,EAArBtL,MAAOoK,EAAckB,EAAdlB,WAERwC,EAAO5H,UAAU,SAEvB4H,EAAKd,UAAU,KAAKC,SACpBa,EAAKP,KAAK,QAASvM,EAAQM,YAAc,eAAiB,IAE1D,IAAM+G,EAASnM,EAAKmM,OAAOtI,MAAM,GAE3BmN,EAAgC,MAArBrN,OAAOsN,WAElBY,EAAgBb,EAAW,GAAK,GAChCc,EAAgBd,EAAW,GAAK,GAChCe,EAAgBf,EAAW,IAAM,IACjCgB,EAAUjC,KAAKC,MAAMrM,OAAOsN,YAAcc,EAAgBF,IAC1DV,EAAapB,KAAKC,OAAOrM,OAAOsN,WAAaY,GAAiBG,EAAU,IAAMA,GAI9EC,EAAY9F,EAAO3L,OACnB4Q,EAAcrB,KAAKC,MAAMmB,EAVN,MAWnBD,EAAaF,EAAW,GAAK,GAC7BkB,EAAclB,EAAW,GAAK,GAC9BmB,EAAWxO,OAAOsN,WAClBS,EAAsB,GAAbtC,EAAkB,EAAI,EAE/BgD,EAAWjB,EAAaU,EACxBQ,EAAYjB,EAAcc,EAAcJ,EAExCQ,EAAUvC,KAAKwC,KAAKN,EAAYD,GAEhCQ,EAAcF,EAAUD,EAExBd,GAAkBjB,EAAQZ,WAEhCvD,EAAOzF,QAAQ,SAACqH,GACd,GAA6B,IAAzB/I,EAAM8B,QAAQ,OAEhBiH,EAAE0E,QAAUzI,OAAO+D,EAAErC,OAAQ,SAACzD,GAAD,OAAOA,EAAEjD,SACjC,CAEL,IAAM0N,EAAUC,KAAS5E,EAAErC,OAAQ,SAACzD,GAAD,OAAmBa,MAAZb,EAAEjD,KAC5C+I,EAAE0E,QAAUC,EAAUA,EAAQ1N,IAAU,KAG5CmH,EAAOyG,KAAK,SAACtD,EAAGD,GAAJ,OAAUA,EAAEoD,QAAUnD,EAAEmD,UAGtBb,EACXP,KAAK,UAAW,CAAC,EAAG,EAAGc,EAAUK,IACjC1B,UAAU,SACV9Q,KAAKgK,SAASsI,IACdO,QACAC,OAAO,KACPzB,KAAK,QAAS,OACdA,KAAK,YAAa,SAAC7E,GAAD,0BAAsB0E,EAAtB,aAAqC1E,EAAM6F,EAA3C,OAGfU,KAAK,SAAUvG,GACnB,IACMwG,GADkBxG,EAAM,GAAKwF,EACI7F,EAAO3L,OAAS2L,EAAO3L,OAASwR,EAAUA,EAC3EiB,EAAQjJ,SAASgJ,GAAejL,IAAI,SAACzH,GAAD,MAAQ,CAACkM,MAAK0G,IAAK5S,KAC7D0J,UAAU5B,MACP0I,UAAU,UACV9Q,KAAKiT,GACLJ,QACAC,OAAO,KACPzB,KAAK,QAAS,QACd8B,QAAQ,iBAAkB5B,IAAmB5L,GAC7C0L,KAAK,YAAa,SAACjP,GAAD,0BAAoBA,EAAE8Q,IAAMd,EAA5B,YAGvBd,EACEM,EADU,MAGL5R,EAHK,CAIRmM,WAJQ,MAOLmE,EAPK,CAQRiB,iBACAJ,aACAC,cACAI,YAlEgB,GAmEhBC,YAlEgB,GAmEhBC,YA1YJ0B,CAAW/C,EAAUC,GAGrB,IAAM+C,IAAoBnE,GA+6B5B,WAEI9K,EADGA,GACc4F,QAAQ,+BAA+BsJ,KAAK,SAACC,GAC5D5O,EAAgB6O,KAAiBD,EAAIA,EAAGE,QAAQC,QAAQC,SACxD/O,EAAe4O,KAAcD,EAAIA,EAAGE,QAAQC,OAAQ,SAACpE,EAAGD,GAAJ,OAAUC,IAAMD,IACpExK,EAAiB2O,KAAiBD,EAAIA,EAAGE,QAAQG,UAAUD,WAG/D,OAAOvP,GAt7BPyP,GAAeP,KAAK,WACdD,IAAoBnE,GAiF5B,SAAmBlP,EAAMsQ,GAAS,IACzBtL,EAAgCsL,EAAhCtL,MAAO0K,EAAyBY,EAAzBZ,WAAYC,EAAaW,EAAbX,UACnBxD,EAAUnM,EAAVmM,OAEDoF,GAAkB7B,EAElBoE,EAAO9J,UAAU,YANS,EAOR8J,EAAKtD,OAAOC,wBAA7BC,EAPyB,EAOzBA,MAAOC,EAPkB,EAOlBA,OACRoD,EAAWrD,EACXsD,EAAYrD,EAEZsD,EAAajK,kBAEhBkK,UAAU,CAACH,EAAW,EAAGC,EAAY,IACrCG,MAAMJ,GACHK,EAAOpK,aAAaiK,WAAWA,GAE/BI,EAAaxN,EAAmB7B,GAChCsP,EAAYrN,EAAWnC,EAAQG,MACrC+E,UAAU,cAAcb,KAAxB,iBAAuCkL,EAAvC,aAAsDC,IAEtD,IAAMC,EAAKT,EAAKjD,OAAO,UAAUQ,KAAK,QAAS0C,GAAU1C,KAAK,SAAU2C,GAEpEQ,EAAyB,GAC7B,GAAI9E,EAAY,CACd,IAAM+E,EAAapK,OAAOG,OAAOmF,IACjC6E,EAAyB3P,EAAe6P,OAAO,SAACC,GAC9C,IAAMpK,EAAOF,OAAOsK,EAAEC,IACtB,OAAOH,IAAelK,EAAK5C,UAAU,EAAmB,IAAhB4C,EAAK/J,OAAe,EAAI,KAIpE,IAAIqU,EAAwBnF,EACxB/K,EAAc+P,OAAO,SAACC,GAAD,OAAOA,EAAEC,KAAOpK,OAAOmF,KAC5ChL,EAEEmQ,EAAaC,QAAQF,EAAsBrU,QACjDwJ,UAAU,gBAAgBmJ,QAAQ,SAAU2B,GAC5C9K,UAAU,mBAAmBgL,MAAM,UAAWF,EAAa,EAAI,GAE/D,IAAMG,EAnHR,SAAoB9I,EAAQwH,GAC1B,IAAM7J,EAAS,GAEToL,EAAwCpM,MAA7BqD,EAAO,GAAGT,OAAO,GAAG3F,MAC/BoP,EAAS3L,EAAa0L,GA+C5B,OA7CA/I,EAAOzF,QAAQ,SAAC2F,GAAU,IACjBX,EAAUW,EAAVX,OACP,GAAKA,EAAOlL,OAAZ,CAFwB,MAKJkL,EAAO,GAApBnB,EALiB,EAKjBA,KAAM/D,EALW,EAKXA,IAGT1D,EAAQ,CACVyH,OACA/D,MACA4O,MAAO/I,EAAMjJ,IAEbyC,MAAOmE,OAAO0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE9B,WAC/BL,OAAQkE,OAAO0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE7B,YAEhCD,SAAU6D,QAAQ0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE9B,WACnCC,UAAW4D,QAAQ0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE7B,aAGlC8O,IACFpS,EAAMiD,MAAQiE,OAAO0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE5B,WACtCvD,EAAMkD,SAAWgE,OAAO0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE3B,cACzCxD,EAAM8J,YAAc9J,EAAMkD,SAAWlD,EAAMiD,MAC3CjD,EAAMoD,SAAW8D,OAAO0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE1B,cACzCzD,EAAM+J,YAAc/J,EAAMoD,SAAWpD,EAAMiD,MAC3CjD,EAAMmD,QAAU+D,OAAO0B,EAAQ,SAACzD,GAAD,OAAOA,EAAEoN,aACxCvS,EAAMgK,WAAahK,EAAMmD,QAAUnD,EAAMiD,MACzCjD,EAAMuD,SAAW2D,QAAQ0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE5B,WAC1CvD,EAAMwD,YAAc0D,QAAQ0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE3B,cAC7CxD,EAAMiK,eAAiBjK,EAAMwD,YAAcxD,EAAMuD,SACjDvD,EAAMyD,YAAcyD,QAAQ0B,EAAQ,SAACzD,GAAD,OAAOA,EAAE1B,cAC7CzD,EAAMkK,eAAiBlK,EAAMyD,YAAczD,EAAMuD,UAGnD,IAAM4G,EAAczG,EAAM,IAC1B2O,EAAOzO,QAAQ,SAAC1B,GACc,iBAAjBlC,EAAMkC,KACflC,EAAM8D,EAAW5B,IAAUlC,EAAMkC,GAASiI,KAI9CnD,EAAOU,OAAOD,IAASzH,KAGlB6Q,EAAS5L,IAAI,SAAC4M,GACnB,IAAMpK,EAAOlD,EAAcsN,EAAEC,KAAOD,EAAEC,GAChC5U,EAAO8J,EAAOS,GACpB,WACEqK,GAAID,EAAEC,GACNU,QAASX,GACN3U,KA0DYuV,CACjBpJ,EACAuD,EAAa8E,EAAyBK,GAGlCW,EAAS,GACfP,EAAWvO,QAAQ,SAACtE,GAClB,IAAMU,EAAQV,EAAE4C,GACK,iBAAVlC,GAA8B,EAARA,GAC/B0S,EAAO1U,KAAKgC,KAGM,IAAlB0S,EAAOhV,QACTgV,EAAO1U,KAAK,GAEd,IAAM2U,EAAMzL,OAAOwL,GACbE,EAAaC,OAAeH,OAAOA,GAAQvC,MAAM2C,GAIvD,SAASC,EAAUzT,GACjB,IAAM0T,EAAQ1T,EAAE4C,GAChB,OAAgB8D,MAATgN,GAAgC,IAAVA,EAAcJ,EAAWI,GAASC,GA8GnE,SAAyBC,EAAUP,GACjBzL,UAAU,eAEvB8G,UAAU,oBACV9Q,KAAK,CAAC,EAAGyV,GAAKlI,OAAOyI,IACrBzM,KACC,SAACsJ,GACC,IAAMoD,EAAQpD,EAAMC,OAAO,OAAOzB,KAAK,QAAS,mBAEhD,OADA4E,EAAMnD,OAAO,OAAOK,QAAQ,yBAAyB,GAC9C8C,GAET,SAACC,GAAD,OAAYA,GACZ,SAACC,GAAD,OAAUA,EAAKpF,WAEhBgC,KAAK,SAAU3Q,EAAG9B,GACjB2D,KAAEmE,MAAMgO,IAAI,mBAA0B,IAAN9V,EAAUyV,EAAiBH,EAAUtV,EAAI,MAE1EuQ,OAAO,0BACP1H,KAAK,SAAC/G,GAAD,OAgkBDiU,GAhkB4BjU,EAgkBX,KApsBxBkU,CADiBZ,EAAWM,WACFP,GAO1B,IAAMc,EAAUhC,EACb1D,OAAO,eACPC,UAAU,cACV9Q,KAAK0P,EAAamF,EAAwBI,EAAY,SAAC7S,GAAD,OAAOA,EAAEwS,KAC/DrL,KACC,SAACsJ,GAAD,OAAWA,EAAMC,OAAO,QAAQzB,KAAK,UAAW,GAAGA,KAAK,QAAS,uBACjE,SAAC6E,GAAD,OAAYA,GACZ,SAACC,GACCA,EAAKK,aAAaC,SAAS,KAAKpF,KAAK,UAAW,GAAGN,WAIzDwF,EACGlF,KAAK,IAAK,SAACjP,GAAD,OAAOgS,EAAKhS,EAAEkT,WACxBkB,aACAC,SAASC,EAAmB,EAAI,KAChCrF,KAAK,UAAW,GAChBA,KAAK,OAAQ3B,EAAaqG,EAAiBF,GAE9C,IAAMc,EAAYpC,EACf1D,OAAO,iBACPC,UAAU,eACV9Q,KAAK0P,EAAauF,EAAa,GAAI,SAAC7S,GAAD,OAAOA,EAAEwS,KAC5CrL,KACC,SAACsJ,GAAD,OACEA,EACGC,OAAO,QACPzB,KAAK,UAAW,GAChBA,KAAK,QAAS,SAACjP,GAAD,sCAAgCA,EAAEwS,GAAlC,gBACnB,SAACsB,GAAD,OAAYA,GACZ,SAACC,GACCA,EAAKK,aAAaC,SAAS,KAAKpF,KAAK,UAAW,GAAGN,WAGtDM,KAAK,IAAK,SAACjP,GAAD,OAAOgS,EAAKhS,EAAEkT,WACxBjE,KAAK,OAAQwE,GAEhBc,EACGH,aACAC,SAASC,EAAmB,EAAI,KAChCrF,KAAK,UAAW,GAEnBkD,EAAG1D,OAAO,sBACPiF,MAAMlR,GACNyM,KAAK,IAAK+C,GACV/C,KAAK,UAAW3B,EAAa,EAAI,GAEpC,IAAMkH,EAAYlH,EAAaiH,EAAYJ,EAE3C,SAASM,EAAazU,GACpB,IAwcoBkO,EACfxN,EAzcCgU,EAAM9M,SACR5H,EAAEgT,QAwcDtS,GADewN,EAtcH,CAACxN,MAAOV,EAAG4C,QAAO8R,MAAKvF,eAAgBA,IAAmB5L,IAuctE7C,MACPiU,GAAY,GAAD,GACNzG,EADM,CAET0G,MAAOlU,EAAMsS,MACb6B,SAAUhQ,EAAWnC,EAAQG,MAC7BiS,YAAarQ,MAxcf,IAAMsQ,EAAYnN,UAAU,iBAC5BmN,EAAU9F,KAAK,QAASX,GAAOW,KAAK,SAAUV,GAC9CwG,EAAUC,GAAG,QAAS,WAChB1H,GACF2H,GAAe,SAIfvT,EACF8S,EACGQ,GAAG,QAAS,SAAChV,GAEZ4H,SAASsN,kBACTT,EAAazU,KAEdgV,GAAG,aAAc,WAChBG,OAGJX,EACGQ,GAAG,QAAS,SAAChV,GAEViV,GADE9F,EACanP,EAAEgT,MAEF,SAGlBgC,GAAG,aAAcP,GACjBO,GAAG,aAAc,WAChBG,OAKN,IAAMC,EAAQd,EAAmBnC,EAAKA,EAAGiC,aAAaC,SAAS,KAC/D,GAAI/G,GAAcmF,EAAsBrU,OAAQ,CAC9C,IAAMiX,EAAS/H,EAAa0E,EAAKqD,OAAO5C,EAAsB,IAAM,KAC9D6C,EAASD,EAAO,GAAG,GAAKA,EAAO,GAAG,GAClCE,EAAUF,EAAO,GAAG,GAAKA,EAAO,GAAG,GACnCG,GAAWH,EAAO,GAAG,GAAKA,EAAO,GAAG,IAAM,EAC1CI,GAAWJ,EAAO,GAAG,GAAKA,EAAO,GAAG,IAAM,EAC1CtD,EAAQ,GAAMpE,KAAK+H,IAAIJ,EAAS3D,EAAU4D,EAAU3D,GACpDE,EAAY,CAACH,EAAW,EAAII,EAAQyD,EAAS5D,EAAY,EAAIG,EAAQ0D,GAC3EL,EAAMnG,KAAK,YAAa,aAAe6C,EAAY,UAAYC,EAAQ,UAEvEqD,EAAMnG,KAAK,YAAa,wBAG1BqF,GAAmB,EAzPfqB,CAAU1H,EAAUC,KAoE1B,IAAMsF,EAAY,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,WACAoC,UACIjC,EAAiB,OAEnBW,GAAmB,EA0TvB,SAASpF,EAAaM,EAAM5R,EAAMsQ,GAAS,IAEvCtL,EASEsL,EATFtL,MACAoK,EAQEkB,EARFlB,WACAhC,EAOEkD,EAPFlD,YACAmE,EAMEjB,EANFiB,eACAJ,EAKEb,EALFa,WACAC,EAIEd,EAJFc,YACAI,EAGElB,EAHFkB,WACAC,EAEEnB,EAFFmB,WACAC,EACEpB,EADFoB,OAEKvF,EAAmBnM,EAAnBmM,OAAQsB,EAAWzN,EAAXyN,QAETwK,EAAanT,EAAQI,OAAS,WAAa,cAE3CgT,EAASlO,eAEZwL,OAAOxL,SAASoD,EAAY5M,SAC5B2X,WAAW,CAAC,EAAGhH,IACfiH,aAAc1G,EAAStC,EAAc+B,GACrCkH,aAAuB,EAAT3G,EAAcP,GACzBmH,EAAWJ,EAAOK,YAElBC,EAAgBpL,EAAYrF,IAAI,SAAC3F,EAAG9B,GACxC,OAAO4X,EAAO5X,GAAKgY,EAAW,IAGhC,SAASG,EAAW5J,GAClB,IAAM2G,EAAS,CAAC,EAAGzF,KAAK+H,IAAIjJ,EAAO,GAAI/J,EAAQK,QAAU,GAAM,KAC/D,GAAIL,EAAQI,OAAQ,CAClB,IAAMwT,EAAY3I,KAAK+H,IAAIjJ,EAAO,GAAI,KAAO/J,EAAQK,QAAU,IAAO,GAGtE,IADAqQ,EAAO,GAAK,EACLA,EAAO,IAAMkD,GAClBlD,EAAO,IAAM,GAGjB,OAAOxL,GAAGiO,KAAczC,OAAOA,GAAQvC,MAAM,CAAC7B,EAAa,IAAIuH,OAGjE,SAASC,EAASzE,GAChB,IAAM0E,EAAY1E,EAAMqB,SAAS,GAC7BsD,EAAW,EAUf,IATIhU,EAAQI,SAGR4T,EAFEhU,EAAQK,QAEC,EAEA0T,EAAY,IAAM,EAAIA,EAAY,IAAO,EAAIA,EAAY,IAAQ,EAAI,GAI9C,EAA/B1E,EAAM4E,MAAMD,GAAUtY,QAC3BsY,IAEF,OAAO9O,YACKmK,GACT4E,MAAMD,GACNE,eAAe7H,GACf8H,cAAc,GACdC,WAAW,SAAC9W,GACX,OAuWMiU,GAvWajU,GAwWd2E,QAAQ,OAAQ,OArW3B,IAAMoS,EAASV,EAAWhL,EAAQzI,IAC5BoU,EAAQR,EAASO,GAEjBE,EAASzH,EAAKd,UAAU,UAG1BwI,EAAU,EACdD,EAAOtG,KAAK,SAAU3Q,EAAGmX,GAAO,WACxB3I,EAAQ5G,UAAU5B,MAClBpI,EAAOmM,EAAOoN,GACpB,GAAKvZ,EAAL,CAGAsZ,IACA,IAAM5N,EAAS1L,EAAK0L,OAGpBkF,EACGkC,OAAO,QACPzB,KAAK,QAAS,YACdA,KAAK,KAAMD,GACXC,KAAK,KAAMD,GACXC,KAAK,KAAMF,GAGd,IAgBIqI,EAhBAC,EAAaN,EACbO,EAAYN,EAChB,IAAKtU,EAAQM,YAAa,CACxB,IAAIyJ,EAAS7E,UAAU0B,EAAQ,SAACtJ,GAAD,OAAOA,EAAE4C,KAExC,GAAIgC,EAAsBhC,GAAQ,CAChC,IAAM2U,EAAU/K,EAAM5J,GAChB4U,EAAW5P,UAAU0B,EAAQ,SAACtJ,GAAD,OAAOA,EAAEuX,KAC5C9K,EAAS7E,UAAU6E,EAAOtB,OAAOqM,IAGnCF,EAAYd,EADZa,EAAahB,EAAW5J,IAI1B+B,EAAMkC,OAAO,KAAKzB,KAAK,YAAa,kBAAkBzQ,KAAK8Y,GAGvD/T,GACF6T,EACoB,aAAlB1U,EAAQE,MAAuB,CAAC,cAAe,eAAiB,CAAC,WAAY,YAC3EF,EAAQK,UACVqU,EAAcA,EAAYzR,IAAInB,KAGhC4S,EAAc,CAACxU,GAGjB,IAAM6U,EAAQ7P,WAAWvD,KAAK+S,EAAhBxP,CAA6B0B,GA8B3C,GA7BgBkF,EACbE,UAAU,WACV9Q,KAAK6Z,EAAO,SAACzX,GAAD,OAAOA,EAAEgB,MACrByP,QACAC,OAAO,KACPzB,KAAK,QAAS,SAACjP,EAAG9B,GACjB,4BAAsBA,EAAI,EAA1B,kBAAqC8B,EAAEgB,OAIxC0N,UAAU,QACV9Q,KACC,SAACiC,GAAD,OAAOA,GACP,SAACG,GAAD,OAAOiI,OAAOjI,EAAEpC,KAAKmK,KAAKY,aAE3B8H,QACAC,OAAO,QACPzB,KAAK,QAAS,OACdA,KAAK,QAASiH,GACdjH,KAAK,IAAK,SAACjP,EAAG9B,GAAJ,OAAU4X,EAAO5X,KAC3B+Q,KAAK,IAAK,SAACjP,GACV,IAAM0X,EAAI/J,KAAKC,MAAMyJ,EAAWrX,EAAE,KAClC,OAAOoI,OAAOuP,MAAMD,GAAK1I,EAAc0I,IAExCzI,KAAK,SAAU,SAACjP,GACf,IAAM0X,EAAI/J,KAAK+H,IAAI/H,KAAKwC,KAAKnB,EAAcqI,EAAWrX,EAAE,GAAKA,EAAE,KAAM,GACrE,OAAOoI,OAAOuP,MAAMD,GAAK,EAAIA,IAG7B9S,EAAsBhC,GAAQ,CAChC,IAAMgV,EAAU1B,EAAW,EACrB2B,EAAOjQ,UAEVkQ,EAAE,SAAC9X,EAAG9B,GAAJ,OAAUyP,KAAKoK,MAAMjC,EAAO5X,GAAK0Z,KACnCF,EAAE,SAAC1X,GACF,IAAM0X,EAAI/J,KAAK0F,IAAI1F,KAAKC,MAAMyJ,EAAWrX,EAAEwM,EAAM5J,MAAWoM,GAC5D,OAAO5G,OAAOuP,MAAMD,GAAK1I,EAAc0I,IAExCM,MAAMpQ,mBAET4G,EAAMkC,OAAO,QAAQzB,KAAK,QAAS,WAAWyE,MAAMpK,GAAQ2F,KAAK,IAAK4I,QAEtErJ,EAAME,UAAU,YAAYC,SAG9B,IAAMsJ,EAAazJ,EAChBkC,OAAO,QACPzB,KAAK,KAAM,GACXA,KAAK,KAAMD,GACXC,KAAK,QAAS,8BA6BXiJ,EAAS1J,EACZkC,OAAO,QACPzB,KAAK,QAAS,WACdA,KAAK,QAASF,GACdE,KAAK,SAAUD,GAGdtN,EACFwW,EAAOlD,GAAG,QAAS,WAEjBpN,SAASsN,kBACTiD,EAAY3Z,KAAK,KAGnB0Z,EAAOlD,GAAG,YAAamD,GAAanD,GAAG,QAASoD,GAElD5J,EAAMwG,GAAG,aAAc,WACrBiD,EAAWlH,QAAQ,oBAAoB,GACvCoE,OAIF3G,EACGkC,OAAO,QACP3J,KAAqB,EAAhBgD,EAAO3L,OAAP,UAAuB8Y,EAAvB,aAAmCtZ,EAAKoD,KAAQpD,EAAKoD,KAC1DiO,KAAK,IAAKG,GACVH,KAAK,IAAKI,GACVJ,KAAK,QAAS,cACd+F,GAAG,QAASoD,GAEX1V,EAAQK,SAAWnF,EAAKkN,cAC1B0D,EACGkC,OAAO,QACP3J,KAAK,sBACLkI,KAAK,IAAKF,EAAa,GACvBE,KAAK,IAAKD,EAAc,GACxBC,KAAK,QAAS,oBA/DnB,SAASkJ,IACP,IAyGoBjK,EACjBxN,EA1GGgU,EAAM9M,SAENyQ,EADQzQ,SAAS5B,MACJ,GACbsS,EAAc1Q,cAAcwO,EAAeiC,GAC3CE,EAAOnC,EAAckC,EAAc,GACnCE,EAAQpC,EAAckC,GACtBnB,EACIzQ,MAAR6R,GAAqB5K,KAAK8K,IAAIJ,EAAOG,GAAS7K,KAAK8K,IAAIJ,EAAOE,GAC1DD,EACAA,EAAc,EACdvQ,EAAOiD,EAAYmM,GACnBzW,EAAQ4I,EAAOoP,KAAK,SAAC7S,GAAD,OAAOA,EAAEkC,KAAKY,YAAcZ,EAAKY,YAC3D,GAAIjI,IAAUA,IAAU0C,IAAiBC,GAAe,CACtD,IAAMsV,EAAQhL,KAAKoK,MAAMjC,EAAOqB,GAASjB,EAAW,GACpD+B,EAAWhJ,KAAK,KAAM0J,GAAO1J,KAAK,KAAM0J,GAAO5H,QAAQ,oBAAoB,GA4F1ErQ,GADiBwN,EA1FD,CAACxN,QAAOkC,QAAO8R,MAAKvF,eAAgBA,IAAmB5L,IA2FvE7C,MACPiU,GAAY,GAAD,GACNzG,EADM,CAET0G,MAyIJ,SAA2B5U,GACzB,OAAOA,EAAE4Y,eAAe,UAAW,CAAC5Q,KAAM,UAAWE,MAAO,OAAQ2Q,IAAK,YA1IhEC,CAAkBpY,EAAMqH,MAC/B+M,YAAatR,MA3Fb,SAAS4U,IACHjJ,IACF8F,GAAerX,EAAKoD,KACpB+X,GAAS,YA6Cf,IAAMlN,EAAUC,EAAK/B,EAAO,GAAGT,QAAQvB,KACjC6D,EAAY,IAAI1I,KAAK2I,GAC3BD,EAAUJ,QAAQI,EAAUH,UAAYuB,EAAa,GAErDiK,EACGvG,OAAO,QACPzB,KAAK,QAAS,uBACdA,KAAK,cAAe,SACpBA,KAAK,IAAK,GACVA,KAAK,IAAKD,EAAc,GACxBjI,KAAKiS,EAAYpN,IAEpBqL,EACGvG,OAAO,QACPzB,KAAK,QAAS,qBACdA,KAAK,cAAe,OACpBA,KAAK,IAAKF,GACVE,KAAK,IAAKD,EAAc,GACxBjI,KAAKiS,EAAYnN,IAatB,IAAMgC,EAAc,MAgBpB,SAAS8G,GAAYzG,GACnB+K,aAAa3V,GADe,IAErB5C,EAAmEwN,EAAnExN,MAAOkC,EAA4DsL,EAA5DtL,MAAO8R,EAAqDxG,EAArDwG,IAAKvF,EAAgDjB,EAAhDiB,eAAgByF,EAAgC1G,EAAhC0G,MAAOC,EAAyB3G,EAAzB2G,SAAUC,EAAe5G,EAAf4G,YAC3D1R,EAAe1C,EACf2C,GAAe,EACf,IAAM6V,EAAQxE,EAAIwE,MACZC,EAAQzE,EAAIyE,MACZC,EAAU1E,EAAI0E,QAEdpF,EAAM,CAACuE,KAAM,GAAIC,MAAO,GAAIa,IAAK,GAAIC,OAAQ,GAAIC,UAAW,IAC5DxJ,EAAWxO,OAAOsN,WAClB2K,EAAYjY,OAAOkY,YACnBC,EAAa/X,SAASG,KAAKuM,wBAAwBE,OAEnDoL,EAAyB,EAAdT,EAAQ,IACnBU,EAAYV,EAAQ,IAAMnJ,EAC1B8J,EAA0B,EAAhBT,EAAU,IACpBU,EAAaV,EAAU,IAAMI,EAE/BK,EACF7F,EAAIsF,OAAJ,UAAgBI,EAAaP,EAZnB,GAYV,MAEAnF,EAAIqF,IAAJ,UAAaF,EAdH,GAcV,MAGES,EACF5F,EAAIuE,KAAJ,UAAcW,EAlBJ,GAkBV,MACSS,EACT3F,EAAIwE,MAAJ,UAAezI,EAAWmJ,EApBhB,GAoBV,MACSW,IAAYC,GACrB9F,EAAIuE,KAAOW,EACXlF,EAAIuF,UAAY,mBAChBvF,EAAIsF,OAAJ,UAAgBI,EAAaP,EAxBnB,GAwBV,OACSW,IACT9F,EAAIuE,KAAOW,EACXlF,EAAIuF,UAAY,mBAChBvF,EAAIqF,IAAJ,UAAaF,EA5BH,GA4BV,OAGF,IAGIY,EAHEC,EAAczW,EACd0W,EAAcD,EAAc,QAAU,QAI1CD,EADoB,UAAlBrX,EAAQE,MACG,CACX,CAAC5B,IAAK,WAAYkZ,MAAO,WAAYC,IAAKzZ,EAAM8J,aAChD,CAACxJ,IAAK,WAAYkZ,MAAO,WAAYC,IAAKzZ,EAAM+J,aAChD,CAACzJ,IAAK,UAAWmZ,IAAKzZ,EAAMgK,YAC5B,CAAC1J,IAAK,SACN,CAACA,IAAK,SACN,CAACA,IAAK,WAEmB,aAAlB0B,EAAQE,MACJ,CACX,CAAC5B,IAAK,cAAekZ,MAAO,WAAYC,IAAKzZ,EAAMiK,gBACnD,CAAC3J,IAAK,cAAekZ,MAAO,WAAYC,IAAKzZ,EAAMkK,gBACnD,CAAC5J,IAAK,YACN,CAACA,IAAK,YACN,CAACA,IAAK,cAGK,CAAC,QAAS,SAAU,WAAY,aAAa2E,IAAI,SAACpB,GAAD,MAAQ,CACpEvD,IAAKuD,EACL2V,MAAO3V,IAAM3B,EAAQ,WAAa,QAGlCF,EAAQK,UACVgX,EAAaA,EAAWpU,IAAI,SAACyU,GAAD,aACvBA,EADuB,CAE1BpZ,IAAKwD,EAAW4V,EAAGpZ,KACnBqZ,OAAQ,YACRC,UAAWC,MAEI7T,MAAbhG,EAAM0D,KACR2V,EAAWrb,KAAK,CACdsC,IAAK,SAIX,IAAMwZ,EAAcT,EAAWpU,IAAI,SAACyU,GAClC,IA6FsBlZ,EA7FhBuZ,EAASL,EAAGE,WAAaI,GACzBC,EAAUja,EAAM0Z,EAAGpZ,KACzB,OAAe0F,MAAXiU,EACK,GAET,mDACkCP,EAAGF,OAAS,GAD9C,aACqDpF,EAAYsF,EAAGpZ,KADpE,yDAEiCyZ,EAAOE,IAFxC,OAEmDP,EAAGC,QAAU,GAFhE,6BAIML,EAAW,oEAqFPtT,OADYxF,EAjFKkZ,EAAGD,KAkFzB,WAAqBS,GAAO1Z,GAA5B,KAAoC,GArFxB,oCAMP,GAVV,kBAeI2Z,EAAe1L,EACjB,6HACA,GAEJtN,KAAE,YACCE,SAAS,SACT+Y,YAAY,YAAa3L,GACzB6E,IAAIA,GACJ+G,KAJH,mBAKgBnG,EALhB,0BAMMC,EAAW,OAAH,OAAUA,EAAV,SAA4B,GAN1C,oDAOqCoF,EAPrC,+BAQcO,EAAYrT,KAAK,IAR/B,iDAUY0T,EAVZ,WAeF,SAAS1F,KAEP7R,EAAmB0X,WAAWC,EAAavZ,EAAgB,IAAM,IAEnE,SAASuZ,IACPpZ,KAAE,YAAYqZ,YAAY,SAC1B7X,GAAe,EAGjB,SAAS2V,EAAYhZ,GACnB,OAAOA,EAAE4Y,eAAe,UAAW,CAAC1Q,MAAO,QAAS2Q,IAAK,YAY3D,SAAS5E,GAAc/S,EAAGia,GACxB,IAAIC,EAYJ,OAXS,KAALla,GACFA,GAAQ,IACRka,EAAS,KACK,KAALla,IACTA,GAAQ,IACRka,EAAS,UAEO1U,IAAdyU,IAEFja,EAAIma,WAAWna,EAAEoa,YAAYH,KAExBC,EAAS,GAAH,OAAMla,GAAN,OAAUka,GAAWnT,OAAO/G,GAG3C,IAAMqa,EAAoB3T,UAAU,QAC9B4T,EAAyB5T,UAAU,QACzC,SAAS2S,EAAmBrZ,GAC1B,OAAY,GAALA,EAASqa,EAAuBC,GAALta,GAGpC,IAAMua,GAAa7T,UAAU,MAC7B,SAAS8S,GAAmBxZ,GAC1B,OAAOua,GAAWva,GAOpB,IAAM0Z,GAAShT,UAAU,OAKzB,SAASqN,GAAetS,GACtBmD,EAAOpH,KAAP,MAAcwG,EAAWvC,MAAQA,IAGnC,SAASoW,GAAS2C,GAChB,IAAMC,EAAKha,SAASia,cAAcF,GAC7BC,GAAOA,EAAGE,gBACbta,OAAOwX,SAAS,EAAG,GAErB4C,EAAGE,eAAe,CAACC,SAAU,SAAUC,MAAO,UAsEhD,IAAMC,GAAeC,KAAS,WACxB3Z,GACFyK,EAAOzK,IAER,KAsCH,SAAS4Z,KASP,OAPEja,EADGA,GACiBka,QAAQrX,IAAI,CAC9B8C,OAAO,kFACPA,OAAO,6BACNsJ,KAAK,YAAsB,IA5vCT1J,EAAKpD,EAEtBuD,EAKAyU,EACAtT,EAovC0B,UAApBtB,EAAoB,KAAf6U,EAAe,KA5vCT7U,EA6vCHA,EA7vCQpD,EA6vCHiY,EA3vCnB1U,EAAeC,UAElB5G,IAAI,SAACuD,GAAD,OAAOA,EAAE5B,QACbkF,QAAQL,GAEL4U,EAAW,GACXtT,EAASC,EAAmB3E,GAElCuD,EAAarD,QAAQ,SAAC3B,GACpB,IAIM2Z,EAAWtT,EAJApB,UAEd5G,IAAI,SAACuD,GAAD,OAAOA,EAAE8F,SACbxC,QAAQlF,EAAM2G,QACwBR,GACzCsT,EAASzZ,EAAM3B,KAAO,CAACA,IAAK2B,EAAM3B,IAAKwQ,SAAU8K,KAGnDla,EAAaga,IAgvCf,SAAShW,KACPlE,EAAiBgP,KAAK,kBA5EtBnE,EAAO,CAAChD,OAAQ5H,EAAWkL,SAAUhL,IACrCR,KAAE,mBAAmBqZ,YAAY,cACjCD,MA6EF,SAAS5U,GAAuB1D,GAC9BwZ,QAAQrX,IAAI,CAAC5C,EAAkBga,OAAoBhL,KAAK,kBA3ElDqL,EAAmBna,EADHO,EA4EuDA,GAzEvEqL,EAAe7L,EAAUmQ,OAAO,SAAC9S,GAAD,OAAOA,EAAEwB,MAAQ2B,IACjD4K,EAAYS,EAAeA,EAAa,GAAG1E,OAAO,GAAGnB,KAAO,KAElE4E,EAAO,CACLhD,OAAQwS,EAAiB/K,SACzBnE,SAAUW,EACVV,YAAY,EACZC,cAGF1L,KAAE,mBAAmBE,SAAS,cAC9BkZ,IAdF,IAAwBtY,EAChB4Z,EAEAvO,EACAT,IAkBRhM,OAAOib,iBAAiB,SAAUR,IAe9B9Z,EADGA,GACgBia,QAAQrX,IAAI,CAC7B8C,OAAO,gFACPA,OAAO,2BACPA,QAAQ,wDACPsJ,KAAK,YAAkC,cACxC3J,EADwC,gBAIxC,IAAMkV,EAAeta,EAClBV,MAAM,GACN+O,KAAK,SAACtD,EAAGD,GAAJ,OAAUC,EAAElM,IAAI0b,cAAczP,EAAEjM,OACrC2E,IAAI,SAACnG,GAAD,+BAAyBA,EAAEwB,IAA3B,aAAmCxB,EAAEwB,IAArC,eACJmG,KAAK,IACRtF,KAAE,iBAAiBkZ,KAAnB,0DAA2E0B,IACrD,QAAlB/Z,EAAQC,OACVd,KAAE,iBAAiB8E,IAAIjE,EAAQC,SA4BjB,QAAlBD,EAAQC,OACVyD,KAEA4U,WAAWkB,GAAiB,MAE5B7V,GAAuB3D,EAAQC,OAtI/Bd,KAAE,iBAAiB8a,OAAO,WAExB1H,GADYpT,KAAEmE,MAAMW,SAGtB9E,KAAE,mBAAmB+a,MAAM,WACzB3H,GAAe,OACf8D,GAAS,cAEXlX,KAAE,iBAAiB8a,OAAO,WACxB7W,EAAOpH,KAAP,MACGwG,EAAWtC,MAAQf,KAAEmE,MAAMW,UAGhC9E,KAAE,gBAAgB8a,OAAO,WACvB7W,EAAOpH,KAAP,MAAcwG,EAAWrC,KAAOhB,KAAEmE,MAAMW,UAE1C9E,KAAE,YAAY+a,MAAM,SAAUlI,GAE5BA,EAAIQ,kBACArT,KAAEmE,MAAM6W,GAAG,eAAiBzZ,IAC9B6R,GAAe7R,EAAaT,OAASS,EAAa4P,OAE7C5P,EAAa4P,OAChB+F,GAAS,WAIflX,KAAE,qBAAqB8a,OAAO,WAC5B,IAAMjc,EAAQmB,KAAEmE,MAAM6W,GAAG,YACzB/W,EAAOpH,KAAP,MAAcwG,EAAWpC,OAASpC,EAAQ,IAAM,QAElDmB,KAAE,gBAAgB8a,OAAO,WACvB,IAAMjc,EAAQmB,KAAEmE,MAAM6W,GAAG,YACzB/W,EAAOpH,KAAP,MAAcwG,EAAWnC,QAAUrC,EAAQ,IAAM,QAEnDmB,KAAE,oBAAoB8a,OAAO,WAC3B,IAAMjc,EAAQmB,KAAEmE,MAAM6W,GAAG,YACzB/W,EAAOpH,KAAP,MAAcwG,EAAWlC,YAActC,EAAQ,IAAM,QAEvDmB,KAAEF,UAAUqT,GAAG,QAAS,WACtBG,OAxkDN","file":"main.2a8a7d4b59a3460b527d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"Vtdi\",1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as d3 from 'd3';\nimport scaleCluster from 'd3-scale-cluster';\nimport memoizeOne from 'memoize-one';\nimport throttle from 'lodash/throttle';\nimport findLast from 'lodash/findLast';\nimport sortedIndexBy from 'lodash/sortedIndexBy';\nimport $ from 'jquery';\nimport * as history from 'history';\nimport * as topojson from 'topojson-client';\nimport './style.css';\n\n(function () {\n  const isTouchDevice = 'ontouchstart' in document.documentElement;\n  if (isTouchDevice) {\n    $(document.body).addClass('touch');\n  }\n\n  // Data\n  let stateData = null;\n  let countyData = null;\n  let usData = null;\n  let lastData = null;\n\n  // Map features\n  let stateFeatures = null;\n  let stateBorders = null;\n  let countyFeatures = null;\n\n  // Filter values\n  const filters = {\n    state: 'all',\n    field: 'newCases',\n    time: '14d',\n    useLog: false,\n    per100k: false,\n    consistentY: true,\n  };\n\n  // UI state\n  let firstCasesDate = new Date(2020, 0, 21);\n  let lastCasesDate = null;\n  let tooltipValue = null;\n  let tooltipShown = null;\n  let tooltipHideTimer = null;\n  let isTestingData = false;\n\n  let mapDataPromise;\n  let countyDataPromise;\n  let stateDataPromise;\n\n  ///////////////\n  // Constants //\n  ///////////////\n\n  const dataPointLabels = {\n    cases: 'Total Cases',\n    deaths: 'Total Deaths',\n    tests: 'Total Tests',\n    positive: 'Total Positive',\n    pending: 'Total Pending',\n    negative: 'Total Negative',\n    newCases: 'New Cases',\n    newDeaths: 'New Deaths',\n    newTests: 'New Tests',\n    newPositive: 'New Positive',\n    newNegative: 'New Negative',\n    pop: 'Est. Population',\n  };\n  Object.keys(dataPointLabels).forEach((k) => {\n    dataPointLabels[per100kKey(k)] = dataPointLabels[k];\n  });\n\n  // On the map, \"daily new\" fields are averages\n  const mapDataPointLabels = {...dataPointLabels};\n  Object.keys(mapDataPointLabels).forEach((key) => {\n    if (key.indexOf('new') === 0) {\n      mapDataPointLabels[key] = `Avg ${mapDataPointLabels[key].replace('New', 'Daily')}`;\n    }\n  });\n\n  const fieldHasMovingAverage = {\n    newCases: true,\n    newDeaths: true,\n    [per100kKey('newCases')]: true,\n    [per100kKey('newDeaths')]: true,\n  };\n\n  const timeLabels = {\n    '7d': 'Last 7 days',\n    '14d': 'Last 14 days',\n    '1mo': 'Last 30 days',\n    all: 'All-time',\n  };\n\n  const MA_NUM_DAYS = 7;\n\n  const KANSAS_CITY_FAKE_FIPS = '29999';\n\n  // https://github.com/nytimes/covid-19-data#geographic-exceptions\n  const countyLabelToFips = {\n    'New York City': '36061',\n    'Kansas City': KANSAS_CITY_FAKE_FIPS,\n  };\n\n  const populationOverrides = {\n    // Kansas City, MO edge cases. City is not a real county, it overlaps\n    // with four other counties. Mayor posted a tweet with population estimates\n    // for the city overall, and the parts of the counties that fall within the city.\n    // https://twitter.com/QuintonLucasKC/status/1249756319805997058\n    [KANSAS_CITY_FAKE_FIPS]: 505604,\n    // Cass County, MO\n    '29037': 103610 - 85,\n    // Jackson County, MO\n    '29095': 700307 - 313870,\n    // Clay County, MO\n    '29047': 246365 - 137446,\n    // Platte County, MO\n    '29165': 102985 - 54202,\n\n    // New York City - Sum of the 5 boroughs due to NYT geographic exception\n    '36061': 8336817,\n  };\n\n  const fipsRemapping = {\n    // Bronx -> NY\n    '36005': '36061',\n    // Kings -> NY,\n    '36047': '36061',\n    // Queens -> NY\n    '36081': '36061',\n    // Richmond -> NY\n    '36085': '36061',\n  };\n\n  ////////////\n  // Router //\n  ////////////\n\n  const filterKeys = {\n    state: 'state',\n    field: 'field',\n    time: 'time',\n    useLog: 'log',\n    per100k: 'per100k',\n    consistentY: 'consistentY',\n  };\n  const filterDefaults = {\n    state: 'all',\n    field: 'newCases',\n    time: '14d',\n    useLog: false,\n    per100k: false,\n    consistentY: true,\n  };\n\n  class Router {\n    constructor(hist) {\n      this.history = hist;\n      this.history.listen(() => {\n        // Update filter state variables and re-render\n        this.parse();\n        if (filters.state === 'all') {\n          fetchAndRenderStates();\n        } else {\n          fetchAndRenderCounties(filters.state);\n        }\n      });\n    }\n\n    parse(firstParse = false) {\n      const qs = parseQs(this.history.location.search);\n      const keys = Object.keys(filterKeys);\n\n      for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        const qsKey = filterKeys[k];\n        let v = qs[qsKey] != undefined ? qs[qsKey] : filterDefaults[k];\n        // Coerce boolean filter values from string to boolean\n        if (typeof filterDefaults[k] === 'boolean' && typeof v === 'string') {\n          v = v === '1';\n        }\n        if (filters[k] === v && !firstParse) {\n          continue;\n        }\n        switch (k) {\n          case 'state': {\n            // Somehow URLs with plus instead of space are being used\n            v = v.replace('+', ' ');\n            filters.state = v;\n            $('#state-select').val(v);\n            break;\n          }\n          case 'field': {\n            if (dataPointLabels[v]) {\n              filters.field = v;\n              $('#field-select').val(v);\n\n              isTestingData = filters.field === 'tests' || filters.field === 'newTests';\n              if (isTestingData) {\n                // Disable useLog if switching to testing data\n                filters.useLog = false;\n                $('#cb-use-log-scale').prop('checked', false);\n                qs[filterKeys.useLog] = '0';\n\n                $('.testing-legend').show();\n                $('#filter-use-log-scale').hide();\n              } else {\n                $('.testing-legend').hide();\n                $('#filter-use-log-scale').show();\n              }\n              if (v === 'newCases' || v === 'newDeaths') {\n                $('.ma-legend .legend-field-label').text(dataPointLabels[v]);\n                $('.ma-legend').show();\n              } else {\n                $('.ma-legend').hide();\n              }\n            }\n            break;\n          }\n          case 'time': {\n            filters.time = v;\n            $('#time-select').val(v);\n            break;\n          }\n          case 'useLog': {\n            filters.useLog = v;\n            $('#cb-use-log-scale').prop('checked', v);\n            break;\n          }\n          case 'per100k': {\n            filters.per100k = v;\n            $('#cb-per-100k').prop('checked', v);\n            break;\n          }\n          case 'consistentY': {\n            filters.consistentY = v;\n            $('#cb-consistent-y').prop('checked', v);\n            break;\n          }\n        }\n      }\n    }\n\n    push(obj) {\n      this._update('push', obj);\n    }\n\n    replace(obj) {\n      this._update('replace', obj);\n    }\n\n    _update(action, obj) {\n      const query = {\n        ...parseQs(this.history.location.search),\n        ...obj,\n      };\n      this.history[action]({\n        search: stringifyQs(query),\n      });\n    }\n  }\n\n  function parseQs(qs) {\n    const query = qs[0] === '?' ? qs.substring(1) : qs;\n    const vars = query ? query.split('&') : [];\n    const obj = {};\n    for (let i = 0; i < vars.length; i++) {\n      const [k, v] = vars[i].split('=').map(decodeURIComponent);\n      obj[k] = v;\n    }\n    return obj;\n  }\n  function stringifyQs(obj) {\n    const result = Object.keys(obj)\n      .map((k) => {\n        return `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`;\n      })\n      .join('&');\n    return result ? `?${result}` : '';\n  }\n  const router = new Router(history.createBrowserHistory());\n  router.parse(true);\n\n  /////////////////////\n  // Data Processing //\n  /////////////////////\n\n  function getValueKeys(withTesting) {\n    const valueKeys = ['cases', 'deaths', 'newCases', 'newDeaths'];\n    if (withTesting) {\n      valueKeys.push(\n        'positive',\n        'negative',\n        'pending',\n        'tests',\n        'newPositive',\n        'newNegative',\n        'newTests',\n      );\n    }\n    return valueKeys;\n  }\n\n  function processStates(csv, pop, testingCsv) {\n    const nestedStates = d3\n      .nest()\n      .key((k) => k.state)\n      .entries(csv);\n\n    const testingByFips = processTestingData(testingCsv);\n\n    const popMap = processPopulations(pop);\n    stateData = processGroups(nestedStates, popMap, testingByFips);\n\n    const [usRawData, usRawTesting] = processUS(csv, testingByFips);\n    usData = processGroups(usRawData, popMap, usRawTesting);\n  }\n\n  function processUS(csv, testingByFips) {\n    const aggNytKeys = ['cases', 'deaths'];\n    const aggTestKeys = [\n      'positive',\n      'negative',\n      'pending',\n      'tests',\n      'newPositive',\n      'newNegative',\n      'newTests',\n    ];\n\n    // Nest by date (easier to aggregate)\n    const nested = d3\n      .nest()\n      .key((k) => k.date)\n      .entries(csv);\n\n    const usValues = nested.map((n) => {\n      const stateValuesAtDate = n.values;\n      const usValuesAtDate = {\n        fips: '00',\n        date: stateValuesAtDate[0].date,\n      };\n      stateValuesAtDate.forEach((state) => {\n        aggNytKeys.forEach((key) => {\n          if (!usValuesAtDate[key]) {\n            usValuesAtDate[key] = 0;\n          }\n          usValuesAtDate[key] += Number(state[key]);\n        });\n      });\n      return usValuesAtDate;\n    });\n\n    // Aggregate testing data\n    const testsByDate = {};\n    Object.keys(testingByFips).forEach((fips) => {\n      const dates = testingByFips[fips];\n      Object.keys(dates).forEach((date) => {\n        if (!testsByDate[date]) {\n          testsByDate[date] = {};\n        }\n        const stateValueAtDate = dates[date];\n        const usValueAtDate = testsByDate[date];\n        aggTestKeys.forEach((key) => {\n          if (!usValueAtDate[key]) {\n            usValueAtDate[key] = 0;\n          }\n          usValueAtDate[key] += stateValueAtDate[key] || 0;\n        });\n      });\n    });\n\n    return [[{key: 'United States', values: usValues}], {'00': testsByDate}];\n  }\n\n  function processTestingData(csv) {\n    const byFips = {};\n    csv.forEach((c) => {\n      if (!c.date) {\n        return;\n      }\n      const year = String(c.date).substring(0, 4);\n      const month = String(c.date).substring(4, 6);\n      const date = String(c.date).substring(6, 8);\n      const fips = c.fips;\n\n      const value = {\n        fips: fips || '',\n        date: new Date(Number(year), Number(month) - 1, Number(date)),\n        positive: coerceNumber(c.positive),\n        negative: coerceNumber(c.negative),\n        pending: coerceNumber(c.pending),\n        tests: coerceNumber(c.total),\n        newPositive: coerceNumber(c.positiveIncrease),\n        newNegative: coerceNumber(c.negativeIncrease),\n        newTests: coerceNumber(c.totalTestResultsIncrease),\n      };\n\n      // Add to our map\n      if (!byFips[fips]) {\n        byFips[fips] = {};\n      }\n      const forFips = byFips[fips];\n      if (forFips[value.date.getTime()]) {\n        console.error(`Multiple rows for for same state fips/date`, c);\n      }\n      forFips[value.date.getTime()] = value;\n    });\n\n    return byFips;\n  }\n\n  function coerceNumber(value) {\n    return value == undefined ? null : Number(value);\n  }\n\n  function processCounties(csv, pop) {\n    // First nest counties by state\n    const nestedStates = d3\n      .nest()\n      .key((k) => k.state)\n      .entries(csv);\n\n    const stateMap = {};\n    const popMap = processPopulations(pop);\n\n    nestedStates.forEach((state) => {\n      const counties = d3\n        .nest()\n        .key((k) => k.county)\n        .entries(state.values);\n      const byCounty = processGroups(counties, popMap);\n      stateMap[state.key] = {key: state.key, counties: byCounty};\n    });\n\n    countyData = stateMap;\n  }\n\n  function processPopulations(pop) {\n    const map = Object.assign({}, populationOverrides);\n    pop.forEach((p) => {\n      const fips = fipsRemapping[p.fips] || p.fips;\n      if (populationOverrides[fips]) {\n        map[fips] = populationOverrides[fips];\n      } else {\n        map[fips] = parseInt(p.pop);\n      }\n    });\n    return map;\n  }\n\n  function processGroups(groups, popMap, testingMap) {\n    const valueKeys = getValueKeys(!!testingMap);\n\n    groups.forEach((group) => {\n      const newRows = [];\n      for (let i = 0; i < group.values.length; i++) {\n        const prevRow = group.values[i - 1];\n        const row = group.values[i];\n        const [year, month, date] = row.date.split('-');\n\n        let fips = row.fips;\n        if (!fips && row.county) {\n          fips = countyLabelToFips[row.county];\n        }\n\n        const parsed = {\n          ...row,\n          fips,\n          date: new Date(Number(year), Number(month) - 1, Number(date)),\n          cases: Number(row.cases),\n          deaths: Number(row.deaths),\n        };\n        if (prevRow) {\n          parsed.newCases = parsed.cases - prevRow.cases;\n          parsed.newDeaths = parsed.deaths - prevRow.deaths;\n        } else {\n          parsed.newCases = parsed.cases;\n          parsed.newDeaths = parsed.deaths;\n        }\n        newRows.push(parsed);\n\n        // Add in testing data\n        const testing = ((testingMap ? testingMap[parsed.fips] : {}) || {})[parsed.date.getTime()];\n        if (testing) {\n          parsed.positive = testing.positive;\n          parsed.positivePct = testing.positive / testing.tests;\n          parsed.negative = testing.negative;\n          parsed.negativePct = testing.negative / testing.tests;\n          parsed.pending = testing.pending;\n          parsed.pendingPct = testing.pending / testing.tests;\n          parsed.tests = testing.tests;\n          parsed.newPositive = testing.newPositive;\n          parsed.newPositivePct = testing.newPositive / testing.newTests;\n          parsed.newNegative = testing.newNegative;\n          parsed.newNegativePct = testing.newNegative / testing.newTests;\n          parsed.newTests = testing.newTests;\n        }\n\n        // Add population-normalized data\n        const pop = popMap[parsed.fips];\n        if (pop) {\n          parsed.pop = pop;\n          const p100kFactor = pop / 1e5;\n          valueKeys.forEach((key) => {\n            if (typeof parsed[key] === 'number') {\n              parsed[per100kKey(key)] = parsed[key] / p100kFactor;\n            }\n          });\n        } else {\n          group.noPopulation = true;\n        }\n\n        if (lastCasesDate === null || parsed.date.getTime() > lastCasesDate.getTime()) {\n          lastCasesDate = parsed.date;\n        }\n      }\n      group.values = newRows;\n    });\n\n    return groups;\n  }\n\n  function filterData(groups, datesToShow, hasTestingData) {\n    const valueKeys = getValueKeys(hasTestingData);\n    const allValueKeys = valueKeys.concat(valueKeys.map(per100kKey));\n\n    // Keys for which to compute moving averages\n    let maKeys = ['newCases', 'newDeaths'];\n    maKeys = maKeys.concat(maKeys.map(per100kKey));\n\n    const extents = {};\n    const extentKeys = ['date'].concat(allValueKeys);\n    extentKeys.forEach((key) => (extents[key] = [null, null]));\n\n    const maStartDate = new Date(datesToShow[0]);\n    maStartDate.setDate(maStartDate.getDate() - MA_NUM_DAYS);\n\n    const dateAccessor = (v) => v.date.getTime();\n\n    const newGroups = groups.map((g) => {\n      const {values} = g;\n      const newRows = [];\n\n      // Start/end date of the visualized range\n      let startDate = datesToShow[0];\n      let endDate = last(datesToShow);\n      // However we start 7 days before to calculate moving averages\n      let curDate = new Date(maStartDate);\n\n      // Using sortedIndexBy to binary search for the index where our dates start\n      let valuesIndex = sortedIndexBy(values, {date: maStartDate}, dateAccessor);\n\n      // Data structure to store our N-day moving average window for each field\n      let maWindows = {};\n      maKeys.forEach((key) => {\n        maWindows[key] = [];\n      });\n\n      while (curDate.getTime() <= endDate.getTime()) {\n        // Is this date within our visualized range?\n        let isWithinRange = curDate.getTime() >= startDate.getTime();\n\n        // Peek at the next value in our values array – is there a value for the current date?\n        let nextValue = values[valuesIndex];\n        let matchingValue =\n          nextValue && nextValue.date.getTime() === curDate.getTime() ? nextValue : null;\n\n        // First update moving averages\n        let maValues = {};\n        maKeys.forEach((key) => {\n          const arr = maWindows[key];\n          if (arr.length === MA_NUM_DAYS) {\n            arr.shift();\n          }\n          // If there is data for the current date/field combo, use that.\n          if (matchingValue && typeof matchingValue[key] === 'number') {\n            arr.push(nextValue[key]);\n          } else {\n            arr.push(0);\n          }\n          // Store today's moving average as the mean of our moving average window\n          maValues[maKey(key)] = d3.mean(arr);\n        });\n\n        // For dates that will be visualized, push a value into the newRows array\n        if (isWithinRange) {\n          if (matchingValue) {\n            newRows.push(Object.assign({}, matchingValue, maValues));\n          } else {\n            // If there was no matching value for today, all we have is a moving average,\n            // just generate a fake data point with the average values\n            newRows.push(\n              Object.assign(\n                {\n                  date: new Date(curDate),\n                  fips: values[0].fips,\n                  pop: values[0].pop,\n                  state: values[0].state,\n                  county: values[0].county,\n                },\n                maValues,\n              ),\n            );\n          }\n        }\n\n        // If current index of values array was a match for this date, we want to move to next.\n        if (matchingValue) {\n          valuesIndex++;\n        }\n\n        // Make next loop iteration use tomorrow's date\n        curDate.setDate(curDate.getDate() + 1);\n      }\n\n      // Update the extents object\n      newRows.forEach((row) => {\n        extentKeys.forEach((key) => {\n          const extent = extents[key];\n          const value = row[key];\n          if (value != undefined && (extent[0] === null || value < extent[0])) {\n            extent[0] = value;\n          }\n          if (value != undefined && (extent[1] === null || value > extent[1])) {\n            extent[1] = value;\n          }\n          // Account for moving averages in the extent\n          if (fieldHasMovingAverage[key]) {\n            const maValue = row[maKey(key)];\n            if (maValue != undefined && (extent[1] === null || maValue > extent[1])) {\n              extent[1] = maValue;\n            }\n          }\n        });\n      });\n\n      return {\n        ...g,\n        values: newRows,\n      };\n    });\n\n    return {groups: newGroups, extents};\n  }\n\n  const filterGridData = memoizeOne(filterData);\n  const filterOverviewData = memoizeOne(filterData);\n\n  function per100kKey(key) {\n    return `${key}_p100k`;\n  }\n\n  function maKey(key) {\n    return `${key}_ma`;\n  }\n\n  function last(arr) {\n    return arr[arr.length - 1];\n  }\n\n  let mapRenderCount = 0;\n  function render(data) {\n    lastData = data;\n    const {groups, overview, isCounties, stateFips} = data;\n\n    const field = filters.per100k ? per100kKey(filters.field) : filters.field;\n\n    let daysToShow;\n    if (filters.time === '7d') {\n      daysToShow = 7;\n    } else if (filters.time === '14d') {\n      daysToShow = 14;\n    } else if (filters.time === '1mo') {\n      daysToShow = 30;\n    } else {\n      daysToShow = dateDiffInDays(lastCasesDate, firstCasesDate);\n    }\n    const datesToShow = [lastCasesDate];\n    for (let i = 1; i < daysToShow; i++) {\n      const nextDate = new Date(lastCasesDate);\n      nextDate.setDate(lastCasesDate.getDate() - i);\n      datesToShow.unshift(nextDate);\n    }\n\n    if (isCounties && isTestingData) {\n      $('#viz').hide();\n      $('.testing-data-unavailable').show();\n      return;\n    } else {\n      $('#viz').show();\n      $('.testing-data-unavailable').hide();\n    }\n\n    const overviewData = filterOverviewData(overview, datesToShow, true);\n    const gridData = filterGridData(groups, datesToShow, !isCounties);\n\n    const options = {\n      field,\n      daysToShow,\n      datesToShow,\n      isCounties,\n      stateFips,\n    };\n\n    renderOverview(overviewData, options);\n    renderGrid(gridData, options);\n\n    // Render map after fetching map data (debounce the render calls)\n    const _mapRenderCount = ++mapRenderCount;\n    fetchMapData().then(() => {\n      if (_mapRenderCount === mapRenderCount) {\n        renderMap(gridData, options);\n      }\n    });\n  }\n\n  function aggMapData(groups, features) {\n    const byFips = {};\n\n    const hasTests = groups[0].values[0].tests != undefined;\n    const fields = getValueKeys(hasTests);\n\n    groups.forEach((group) => {\n      const {values} = group;\n      if (!values.length) {\n        return;\n      }\n      const {fips, pop} = values[0];\n\n      // Just aggregate the number of new cases/etc across the selected time range\n      let value = {\n        fips,\n        pop,\n        label: group.key,\n        // New cases/deaths over last N days\n        cases: d3.sum(values, (v) => v.newCases),\n        deaths: d3.sum(values, (v) => v.newDeaths),\n        // Average of new daily cases/deahts over last N days\n        newCases: d3.mean(values, (v) => v.newCases),\n        newDeaths: d3.mean(values, (v) => v.newDeaths),\n      };\n\n      if (hasTests) {\n        value.tests = d3.sum(values, (v) => v.newTests);\n        value.positive = d3.sum(values, (v) => v.newPositive);\n        value.positivePct = value.positive / value.tests;\n        value.negative = d3.sum(values, (v) => v.newNegative);\n        value.negativePct = value.negative / value.tests;\n        value.pending = d3.sum(values, (v) => v.newPending);\n        value.pendingPct = value.pending / value.tests;\n        value.newTests = d3.mean(values, (v) => v.newTests);\n        value.newPositive = d3.mean(values, (v) => v.newPositive);\n        value.newPositivePct = value.newPositive / value.newTests;\n        value.newNegative = d3.mean(values, (v) => v.newNegative);\n        value.newNegativePct = value.newNegative / value.newTests;\n      }\n\n      const p100kFactor = pop / 1e5;\n      fields.forEach((field) => {\n        if (typeof value[field] === 'number') {\n          value[per100kKey(field)] = value[field] / p100kFactor;\n        }\n      });\n\n      byFips[Number(fips)] = value;\n    });\n\n    return features.map((f) => {\n      const fips = fipsRemapping[f.id] || f.id;\n      const data = byFips[fips];\n      return {\n        id: f.id,\n        feature: f,\n        ...data,\n      };\n    });\n  }\n\n  // https://gka.github.io/palettes/#/7|s|49006a,9b59b6,ffd09f|ffffe0,ff005e,93003a|1|1\n  const mapColors = [\n    '#49006a',\n    '#672682',\n    '#874694',\n    '#a666a0',\n    '#c588a6',\n    '#e3aba6',\n    '#ffd09f',\n  ].reverse();\n  const mapNoDataColor = '#999';\n\n  let isFirstMapRender = true;\n  function renderMap(data, options) {\n    const {field, isCounties, stateFips} = options;\n    const {groups} = data;\n\n    const allowDrilldown = !isCounties;\n\n    const $map = d3.select('#svg-map');\n    const {width, height} = $map.node().getBoundingClientRect();\n    const mapWidth = width;\n    const mapHeight = height;\n\n    const projection = d3\n      .geoAlbersUsa()\n      .translate([mapWidth / 2, mapHeight / 2])\n      .scale(mapWidth);\n    const path = d3.geoPath().projection(projection);\n\n    const fieldTitle = mapDataPointLabels[field];\n    const timeTitle = timeLabels[filters.time];\n    d3.select('#map-title').text(`Map of ${fieldTitle}, ${timeTitle}`);\n\n    const $g = $map.select('#map-g').attr('width', mapWidth).attr('height', mapHeight);\n\n    let countyFeaturesFiltered = [];\n    if (isCounties) {\n      const _stateFips = String(Number(stateFips));\n      countyFeaturesFiltered = countyFeatures.filter((f) => {\n        const fips = String(f.id);\n        return _stateFips === fips.substring(0, fips.length === 4 ? 1 : 2);\n      });\n    }\n\n    let stateFeaturesFiltered = isCounties\n      ? stateFeatures.filter((f) => f.id === Number(stateFips))\n      : stateFeatures;\n\n    const hasMapData = Boolean(stateFeaturesFiltered.length);\n    d3.select('#map-no-data').classed('shown', !hasMapData);\n    d3.select('#viz-map-header').style('opacity', hasMapData ? 1 : 0);\n\n    const joinedData = aggMapData(\n      groups,\n      isCounties ? countyFeaturesFiltered : stateFeaturesFiltered,\n    );\n\n    const domain = [];\n    joinedData.forEach((d) => {\n      const value = d[field];\n      if (typeof value === 'number' && value > 0) {\n        domain.push(value);\n      }\n    });\n    if (domain.length === 0) {\n      domain.push(1);\n    }\n    const min = d3.min(domain);\n    const colorScale = scaleCluster().domain(domain).range(mapColors);\n    const clusters = colorScale.clusters();\n    renderMapLegend(clusters, min);\n\n    function fillColor(d) {\n      const datum = d[field];\n      return datum != undefined && datum !== 0 ? colorScale(datum) : mapNoDataColor;\n    }\n\n    const $states = $g\n      .select('#map-states')\n      .selectAll('.map-state')\n      .data(isCounties ? stateFeaturesFiltered : joinedData, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('opacity', 0).attr('class', 'map-state map-feat'),\n        (update) => update,\n        (exit) => {\n          exit.transition().duration(350).attr('opacity', 0).remove();\n        },\n      );\n\n    $states\n      .attr('d', (d) => path(d.feature))\n      .transition()\n      .duration(isFirstMapRender ? 0 : 350)\n      .attr('opacity', 1)\n      .attr('fill', isCounties ? mapNoDataColor : fillColor);\n\n    const $counties = $g\n      .select('#map-counties')\n      .selectAll('.map-county')\n      .data(isCounties ? joinedData : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('opacity', 0)\n            .attr('class', (d) => `map-county map-county-${d.id} map-feat`),\n        (update) => update,\n        (exit) => {\n          exit.transition().duration(350).attr('opacity', 0).remove();\n        },\n      )\n      .attr('d', (d) => path(d.feature))\n      .attr('fill', fillColor);\n\n    $counties\n      .transition()\n      .duration(isFirstMapRender ? 0 : 350)\n      .attr('opacity', 1);\n\n    $g.select('#map-state-borders')\n      .datum(stateBorders)\n      .attr('d', path)\n      .attr('opacity', isCounties ? 0 : 1);\n\n    const $features = isCounties ? $counties : $states;\n\n    function onMouseEnter(d) {\n      const evt = d3.event;\n      if (d.label) {\n        showMapTooltip({value: d, field, evt, allowDrilldown: allowDrilldown && !isTestingData});\n      }\n    }\n\n    const $backdrop = d3.select('#map-backdrop');\n    $backdrop.attr('width', width).attr('height', height);\n    $backdrop.on('click', () => {\n      if (isCounties) {\n        setStateFilter('all');\n      }\n    });\n\n    if (isTouchDevice) {\n      $features\n        .on('click', (d) => {\n          // Dont let this bubble up to document click\n          d3.event.stopPropagation();\n          onMouseEnter(d);\n        })\n        .on('mouseleave', () => {\n          hideTooltipSoon();\n        });\n    } else {\n      $features\n        .on('click', (d) => {\n          if (allowDrilldown) {\n            setStateFilter(d.label);\n          } else {\n            setStateFilter('all');\n          }\n        })\n        .on('mouseenter', onMouseEnter)\n        .on('mouseleave', () => {\n          hideTooltipSoon();\n        });\n    }\n\n    // Zoom to the correct location (anaimated on subsequent renders)\n    const $gSel = isFirstMapRender ? $g : $g.transition().duration(750);\n    if (isCounties && stateFeaturesFiltered.length) {\n      const bounds = isCounties ? path.bounds(stateFeaturesFiltered[0]) : null;\n      const xWidth = bounds[1][0] - bounds[0][0];\n      const yHeight = bounds[1][1] - bounds[0][1];\n      const xCenter = (bounds[0][0] + bounds[1][0]) / 2;\n      const yCenter = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = 0.9 / Math.max(xWidth / mapWidth, yHeight / mapHeight);\n      const translate = [mapWidth / 2 - scale * xCenter, mapHeight / 2 - scale * yCenter];\n      $gSel.attr('transform', 'translate(' + translate + ')scale(' + scale + ')');\n    } else {\n      $gSel.attr('transform', 'translate(0)scale(1)');\n    }\n\n    isFirstMapRender = false;\n  }\n\n  function renderMapLegend(clusters, min) {\n    const $legend = d3.select('#map-legend');\n    $legend\n      .selectAll('.map-legend-item')\n      .data([0, min].concat(clusters))\n      .join(\n        (enter) => {\n          const $item = enter.append('div').attr('class', 'map-legend-item');\n          $item.append('div').classed('map-legend-item-label', true);\n          return $item;\n        },\n        (update) => update,\n        (exit) => exit.remove(),\n      )\n      .each(function (d, i) {\n        $(this).css('background-color', i === 0 ? mapNoDataColor : mapColors[i - 1]);\n      })\n      .select('.map-legend-item-label')\n      .text((d) => formatMapLegendTick(d));\n  }\n\n  function renderOverview(data, options) {\n    const $overview = d3.select('#svg-overview');\n    const {width, height} = $overview.node().getBoundingClientRect();\n\n    const $cell = $overview.select('g.cell');\n    $cell.selectAll('*').remove();\n\n    const useLarge = window.innerWidth >= 1024;\n    const yAxisWidth = useLarge ? 40 : 30;\n    const xAxisHeight = useLarge ? 20 : 14;\n    const marginRight = 16;\n    const cellLabelX = 6;\n    const cellLabelY = 0;\n    const chartWidth = width - yAxisWidth - marginRight;\n    const chartHeight = height - xAxisHeight;\n\n    $cell.attr('transform', `translate(${yAxisWidth}, 0)`);\n\n    renderCharts($overview, data, {\n      ...options,\n      allowDrilldown: false,\n      chartWidth,\n      chartHeight,\n      cellLabelX,\n      cellLabelY,\n      barPad: 3,\n    });\n  }\n\n  function renderGrid(data, options) {\n    const {field, daysToShow} = options;\n\n    const $svg = d3.select('#grid');\n    // Make sure  we're starting fresh\n    $svg.selectAll('*').remove();\n    $svg.attr('class', filters.consistentY ? 'consistent-y' : '');\n\n    const groups = data.groups.slice(0);\n\n    const useLarge = window.innerWidth >= 1024;\n    const chartAspectRatio = 2.15;\n    const chartXPadding = useLarge ? 30 : 25;\n    const chartYPadding = useLarge ? 40 : 35;\n    const estChartWidth = useLarge ? 250 : 150;\n    const numCols = Math.floor(window.innerWidth / (estChartWidth + chartXPadding));\n    const chartWidth = Math.floor((window.innerWidth - chartXPadding * (numCols + 1)) / numCols);\n\n    const cellLabelX = -20;\n    const cellLabelY = -10;\n    const numStates = groups.length;\n    const chartHeight = Math.floor(chartWidth / chartAspectRatio);\n    const yAxisWidth = useLarge ? 40 : 30;\n    const xAxisHeight = useLarge ? 20 : 14;\n    const winWidth = window.innerWidth;\n    const barPad = daysToShow > 10 ? 1 : 2;\n\n    const colWidth = chartWidth + chartXPadding;\n    const rowHeight = chartHeight + xAxisHeight + chartYPadding;\n\n    const numRows = Math.ceil(numStates / numCols);\n\n    const totalHeight = numRows * rowHeight;\n\n    const allowDrilldown = !options.isCounties;\n\n    groups.forEach((g) => {\n      if (field.indexOf('new') === 0) {\n        // For daily new cases / deaths, sort by the sum of the data currently being shown\n        g.sortVal = d3.sum(g.values, (v) => v[field]);\n      } else {\n        // Otherwise sort by the last shown cumulative value\n        const lastVal = findLast(g.values, (v) => v[field] != undefined);\n        g.sortVal = lastVal ? lastVal[field] : -1;\n      }\n    });\n    groups.sort((a, b) => b.sortVal - a.sortVal);\n\n    // Create grid of rows and columns\n    const $rows = $svg\n      .attr('viewBox', [0, 0, winWidth, totalHeight])\n      .selectAll('g.row')\n      .data(d3.range(numRows))\n      .enter()\n      .append('g')\n      .attr('class', 'row')\n      .attr('transform', (row) => `translate(${yAxisWidth}, ${row * rowHeight})`);\n\n    // Add cells\n    $rows.each(function (row) {\n      const lastItemNumber = (row + 1) * numCols;\n      const numColsForRow = lastItemNumber > groups.length ? groups.length % numCols : numCols;\n      const range = d3.range(numColsForRow).map((i) => ({row, col: i}));\n      d3.select(this)\n        .selectAll('g.cell')\n        .data(range)\n        .enter()\n        .append('g')\n        .attr('class', 'cell')\n        .classed('cell-clickable', allowDrilldown && !isTestingData)\n        .attr('transform', (d) => `translate(${d.col * colWidth}, 0)`);\n    });\n\n    renderCharts(\n      $svg,\n      {\n        ...data,\n        groups,\n      },\n      {\n        ...options,\n        allowDrilldown,\n        chartWidth,\n        chartHeight,\n        cellLabelX,\n        cellLabelY,\n        barPad,\n      },\n    );\n  }\n\n  function renderCharts($svg, data, options) {\n    const {\n      field,\n      daysToShow,\n      datesToShow,\n      allowDrilldown,\n      chartWidth,\n      chartHeight,\n      cellLabelX,\n      cellLabelY,\n      barPad,\n    } = options;\n    const {groups, extents} = data;\n\n    const yScaleType = filters.useLog ? 'scaleLog' : 'scaleLinear';\n\n    const xScale = d3\n      .scaleBand()\n      .domain(d3.range(datesToShow.length))\n      .rangeRound([0, chartWidth])\n      .paddingInner((barPad * daysToShow) / chartWidth)\n      .paddingOuter((barPad * 5) / chartWidth);\n    const barWidth = xScale.bandwidth();\n\n    const barXMidpoints = datesToShow.map((d, i) => {\n      return xScale(i) + barWidth / 2;\n    });\n\n    function makeYScale(extent) {\n      const domain = [0, Math.max(extent[1], filters.per100k ? 0.1 : 10)];\n      if (filters.useLog) {\n        const extentMin = Math.max(extent[0], 0) || (filters.per100k ? 0.01 : 1);\n        // Make sure domain start is small enough such that even really small numbers show a bar\n        domain[0] = 1;\n        while (domain[0] >= extentMin) {\n          domain[0] /= 10;\n        }\n      }\n      return d3[yScaleType]().domain(domain).range([chartHeight, 0]).nice();\n    }\n\n    function makeAxis(scale) {\n      const domainMax = scale.domain()[1];\n      let numTicks = 4;\n      if (filters.useLog) {\n        if (filters.per100k) {\n          // numTicks > 2 here can create 10+ ticks\n          numTicks = 3;\n        } else {\n          numTicks = domainMax < 100 ? 1 : domainMax < 1000 ? 2 : domainMax < 10000 ? 3 : 4;\n        }\n      }\n      // Make sure there arent too many ticks (happens particularly often with log scale + per100k)\n      while (scale.ticks(numTicks).length > 5) {\n        numTicks--;\n      }\n      return d3\n        .axisLeft(scale)\n        .ticks(numTicks)\n        .tickSizeInner(-chartWidth)\n        .tickSizeOuter(0)\n        .tickFormat((d) => {\n          return formatYTick(d);\n        });\n    }\n    const yScale = makeYScale(extents[field]);\n    const yAxis = makeAxis(yScale);\n\n    const $cells = $svg.selectAll('g.cell');\n\n    // Fill each cell with a chart\n    let counter = 0;\n    $cells.each(function (d, index) {\n      const $cell = d3.select(this);\n      const data = groups[index];\n      if (!data) {\n        return;\n      }\n      counter++;\n      const values = data.values;\n\n      // Add baseline\n      $cell\n        .append('line')\n        .attr('class', 'baseline')\n        .attr('y1', chartHeight)\n        .attr('y2', chartHeight)\n        .attr('x2', chartWidth);\n\n      // Add axis\n      let cellYScale = yScale;\n      let cellYAxis = yAxis;\n      if (!filters.consistentY) {\n        let extent = d3.extent(values, (d) => d[field]);\n        // Account for moving average values in extent\n        if (fieldHasMovingAverage[field]) {\n          const maField = maKey(field);\n          const maExtent = d3.extent(values, (d) => d[maField]);\n          extent = d3.extent(extent.concat(maExtent));\n        }\n        cellYScale = makeYScale(extent);\n        cellYAxis = makeAxis(cellYScale);\n      }\n\n      $cell.append('g').attr('transform', 'translate(0,0)').call(cellYAxis);\n\n      let stackFields;\n      if (isTestingData) {\n        stackFields =\n          filters.field === 'newTests' ? ['newPositive', 'newNegative'] : ['positive', 'negative'];\n        if (filters.per100k) {\n          stackFields = stackFields.map(per100kKey);\n        }\n      } else {\n        stackFields = [field];\n      }\n\n      const stack = d3.stack().keys(stackFields)(values);\n      const $layers = $cell\n        .selectAll('g.layer')\n        .data(stack, (d) => d.key)\n        .enter()\n        .append('g')\n        .attr('class', (d, i) => {\n          return `layer layer-${i + 1} layer-${d.key}`;\n        });\n\n      $layers\n        .selectAll('.bar')\n        .data(\n          (l) => l,\n          (d) => String(d.data.date.getTime()),\n        )\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('width', barWidth)\n        .attr('x', (d, i) => xScale(i))\n        .attr('y', (d) => {\n          const y = Math.floor(cellYScale(d[1]));\n          return Number.isNaN(y) ? chartHeight : y;\n        })\n        .attr('height', (d) => {\n          const y = Math.max(Math.ceil(chartHeight - cellYScale(d[1] - d[0])), 0);\n          return Number.isNaN(y) ? 0 : y;\n        });\n\n      if (fieldHasMovingAverage[field]) {\n        const xOffset = barWidth / 2;\n        const line = d3\n          .line()\n          .x((d, i) => Math.round(xScale(i) + xOffset))\n          .y((d) => {\n            const y = Math.min(Math.floor(cellYScale(d[maKey(field)])), chartHeight);\n            return Number.isNaN(y) ? chartHeight : y;\n          })\n          .curve(d3.curveMonotoneX);\n\n        $cell.append('path').attr('class', 'ma-line').datum(values).attr('d', line);\n      } else {\n        $cell.selectAll('.ma-line').remove();\n      }\n\n      const $crosshair = $cell\n        .append('line')\n        .attr('y1', 0)\n        .attr('y2', chartHeight)\n        .attr('class', 'crosshair crosshair-hidden');\n\n      function onMouseMove() {\n        const evt = d3.event;\n        const mouse = d3.mouse(this);\n        const xPos = mouse[0];\n        const bisectIndex = d3.bisectLeft(barXMidpoints, xPos);\n        const left = barXMidpoints[bisectIndex - 1];\n        const right = barXMidpoints[bisectIndex];\n        const index =\n          left == undefined || Math.abs(xPos - right) < Math.abs(xPos - left)\n            ? bisectIndex\n            : bisectIndex - 1;\n        const date = datesToShow[index];\n        const value = values.find((v) => v.date.getTime() === date.getTime());\n        if (value && (value !== tooltipValue || !tooltipShown)) {\n          const chPos = Math.round(xScale(index) + barWidth / 2);\n          $crosshair.attr('x1', chPos).attr('x2', chPos).classed('crosshair-hidden', false);\n          showChartTooltip({value, field, evt, allowDrilldown: allowDrilldown && !isTestingData});\n        }\n      }\n\n      function onClick() {\n        if (allowDrilldown) {\n          setStateFilter(data.key);\n          scrollTo('#viz');\n        }\n      }\n\n      const $hover = $cell\n        .append('rect')\n        .attr('class', 'pointer')\n        .attr('width', chartWidth)\n        .attr('height', chartHeight);\n\n      // Touch device events are slightly different\n      if (isTouchDevice) {\n        $hover.on('click', () => {\n          // Dont let this bubble up to document click\n          d3.event.stopPropagation();\n          onMouseMove.call(this);\n        });\n      } else {\n        $hover.on('mousemove', onMouseMove).on('click', onClick);\n      }\n      $cell.on('mouseleave', () => {\n        $crosshair.classed('crosshair-hidden', true);\n        hideTooltipSoon();\n      });\n\n      // Add label above other elements to make it clickable\n      $cell\n        .append('text')\n        .text(groups.length > 1 ? `${counter}. ${data.key}` : data.key)\n        .attr('x', cellLabelX)\n        .attr('y', cellLabelY)\n        .attr('class', 'cell-label')\n        .on('click', onClick);\n\n      if (filters.per100k && data.noPopulation) {\n        $cell\n          .append('text')\n          .text('No population data')\n          .attr('x', chartWidth / 2)\n          .attr('y', chartHeight / 2)\n          .attr('class', 'cell-label-nopop');\n      }\n    });\n\n    // Add start dates\n    const endDate = last(groups[0].values).date;\n    const startDate = new Date(endDate);\n    startDate.setDate(startDate.getDate() - daysToShow + 1);\n\n    $cells\n      .append('text')\n      .attr('class', 'x-tick x-tick-start')\n      .attr('text-anchor', 'start')\n      .attr('x', 0)\n      .attr('y', chartHeight + 4)\n      .text(formatXDate(startDate));\n\n    $cells\n      .append('text')\n      .attr('class', 'x-tick x-tick-end')\n      .attr('text-anchor', 'end')\n      .attr('x', chartWidth)\n      .attr('y', chartHeight + 4)\n      .text(formatXDate(endDate));\n  }\n\n  function showMapTooltip(options) {\n    const {value} = options;\n    showTooltip({\n      ...options,\n      title: value.label,\n      subtitle: timeLabels[filters.time],\n      fieldLabels: mapDataPointLabels,\n    });\n  }\n\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24;\n  function dateDiffInDays(b, a) {\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n  }\n\n  function showChartTooltip(options) {\n    const {value} = options;\n    showTooltip({\n      ...options,\n      title: formatTooltipDate(value.date),\n      fieldLabels: dataPointLabels,\n    });\n  }\n\n  function showTooltip(options) {\n    clearTimeout(tooltipHideTimer);\n    const {value, field, evt, allowDrilldown, title, subtitle, fieldLabels} = options;\n    tooltipValue = value;\n    tooltipShown = true;\n    const pageX = evt.pageX;\n    const pageY = evt.pageY;\n    const clientY = evt.clientY;\n    const pad = 10;\n    const css = {left: '', right: '', top: '', bottom: '', transform: ''};\n    const winWidth = window.innerWidth;\n    const winHeight = window.innerHeight;\n    const bodyHeight = document.body.getBoundingClientRect().height;\n\n    const fitsLeft = pageX - 250 > 0;\n    const fitsRight = pageX + 250 < winWidth;\n    const fitsTop = clientY - 250 > 0;\n    const fitsBottom = clientY - 250 < winHeight;\n\n    if (fitsTop) {\n      css.bottom = `${bodyHeight - pageY + pad}px`;\n    } else {\n      css.top = `${pageY + pad}px`;\n    }\n\n    if (fitsRight) {\n      css.left = `${pageX + pad}px`;\n    } else if (fitsLeft) {\n      css.right = `${winWidth - pageX + pad}px`;\n    } else if (fitsTop || !fitsBottom) {\n      css.left = pageX;\n      css.transform = 'translateX(-50%)';\n      css.bottom = `${bodyHeight - pageY + pad}px`;\n    } else if (fitsBottom) {\n      css.left = pageX;\n      css.transform = 'translateX(-50%)';\n      css.top = `${pageY + pad}px`;\n    }\n\n    const hasPercents = isTestingData;\n    const columnClass = hasPercents ? 'col-3' : 'col-2';\n\n    let dataPoints;\n    if (filters.field === 'tests') {\n      dataPoints = [\n        {key: 'positive', color: 'primary1', pct: value.positivePct},\n        {key: 'negative', color: 'primary2', pct: value.negativePct},\n        {key: 'pending', pct: value.pendingPct},\n        {key: 'tests'},\n        {key: 'cases'},\n        {key: 'deaths'},\n      ];\n    } else if (filters.field === 'newTests') {\n      dataPoints = [\n        {key: 'newPositive', color: 'primary1', pct: value.newPositivePct},\n        {key: 'newNegative', color: 'primary2', pct: value.newNegativePct},\n        {key: 'newTests'},\n        {key: 'newCases'},\n        {key: 'newDeaths'},\n      ];\n    } else {\n      dataPoints = ['cases', 'deaths', 'newCases', 'newDeaths'].map((k) => ({\n        key: k,\n        color: k === field ? 'primary1' : null,\n      }));\n    }\n    if (filters.per100k) {\n      dataPoints = dataPoints.map((dp) => ({\n        ...dp,\n        key: per100kKey(dp.key),\n        suffix: ' per 100k',\n        formatter: formatPer100kValue,\n      }));\n      if (value.pop != undefined) {\n        dataPoints.push({\n          key: 'pop',\n        });\n      }\n    }\n    const dataPointEl = dataPoints.map((dp) => {\n      const format = dp.formatter || formatTooltipValue;\n      const dpValue = value[dp.key];\n      if (dpValue == undefined) {\n        return '';\n      }\n      return `\n        \t<div class=\"tooltip-dp-label ${dp.color || ''}\">${fieldLabels[dp.key]}</div>\n        \t<div class=\"tooltip-dp-val\">${format(dpValue)}${dp.suffix || ''}</div>\n          ${\n            hasPercents\n              ? `\n            <div class=\"tooltip-dp-pct\">\n              ${formatTooltipPct(dp.pct)}\n            </div>\n          `\n              : ''\n          }\n        \t`;\n    });\n\n    const drilldownMsg = allowDrilldown\n      ? '<div class=\"tooltip-drill\"><span class=\"click\">Click</span><span class=\"tap\">Tap</span><span> to see counties</span></div>'\n      : '';\n\n    $('#tooltip')\n      .addClass('shown')\n      .toggleClass('clickable', allowDrilldown)\n      .css(css)\n      .html(\n        `<div><h4>${title}</h4>\n        ${subtitle ? `<h5>${subtitle}</h5>` : ''}\n              <div class=\"tooltip-grid ${columnClass}\">\n                ${dataPointEl.join('')}\n              </div>\n              ${drilldownMsg}</div>`,\n      );\n  }\n\n  // Sometimes we want to delay hiding to allow user to click into tooltip before it hides (i.e. on mobile)\n  function hideTooltipSoon() {\n    // Long delay needed for iOS safari, otherwise tooltip hides\n    tooltipHideTimer = setTimeout(hideTooltip, isTouchDevice ? 500 : 50);\n  }\n  function hideTooltip() {\n    $('#tooltip').removeClass('shown');\n    tooltipShown = false;\n  }\n\n  function formatXDate(d) {\n    return d.toLocaleString('default', {month: 'short', day: 'numeric'});\n  }\n\n  function formatTooltipDate(d) {\n    return d.toLocaleString('default', {year: 'numeric', month: 'long', day: 'numeric'});\n  }\n\n  function formatYTick(n) {\n    const str = formatNumNice(n);\n    return str.replace(/^0\\./, '.');\n  }\n\n  function formatNumNice(n, precision) {\n    let abbrev;\n    if (n >= 1e6) {\n      n = n / 1e6;\n      abbrev = 'm';\n    } else if (n >= 1e3) {\n      n = n / 1e3;\n      abbrev = 'k';\n    }\n    if (precision !== undefined) {\n      // Need to parseFloat again to avoid scientific notation\n      n = parseFloat(n.toPrecision(precision));\n    }\n    return abbrev ? `${n}${abbrev}` : String(n);\n  }\n\n  const tooltipFmtPer100k = d3.format(',.1f');\n  const tooltipFmtPer100kSmall = d3.format(',.2f');\n  function formatPer100kValue(n) {\n    return n >= 1 ? tooltipFmtPer100k(n) : tooltipFmtPer100kSmall(n);\n  }\n\n  const tooltipFmt = d3.format(',d');\n  function formatTooltipValue(n) {\n    return tooltipFmt(n);\n  }\n\n  function formatMapLegendTick(n) {\n    return formatNumNice(n, 2);\n  }\n\n  const pctFmt = d3.format('.1%');\n  function formatTooltipPct(n) {\n    return n != undefined ? `(${pctFmt(n)})` : '';\n  }\n\n  function setStateFilter(state) {\n    router.push({[filterKeys.state]: state});\n  }\n\n  function scrollTo(selector) {\n    const el = document.querySelector(selector);\n    if (!el || !el.scrollIntoView) {\n      window.scrollTo(0, 0);\n    }\n    el.scrollIntoView({behavior: 'smooth', block: 'start'});\n  }\n\n  function attachEvents() {\n    $('#state-select').change(function () {\n      const val = $(this).val();\n      setStateFilter(val);\n    });\n    $('.back-to-states').click(function () {\n      setStateFilter('all');\n      scrollTo('#viz-map');\n    });\n    $('#field-select').change(function () {\n      router.push({\n        [filterKeys.field]: $(this).val(),\n      });\n    });\n    $('#time-select').change(function () {\n      router.push({[filterKeys.time]: $(this).val()});\n    });\n    $('#tooltip').click(function (evt) {\n      // Dont let this bubble up to the document.click hide event\n      evt.stopPropagation();\n      if ($(this).is('.clickable') && tooltipValue) {\n        setStateFilter(tooltipValue.state || tooltipValue.label);\n        // Scroll to top if this was a chart (not map) click\n        if (!tooltipValue.label) {\n          scrollTo('#viz');\n        }\n      }\n    });\n    $('#cb-use-log-scale').change(function () {\n      const value = $(this).is(':checked');\n      router.push({[filterKeys.useLog]: value ? '1' : '0'});\n    });\n    $('#cb-per-100k').change(function () {\n      const value = $(this).is(':checked');\n      router.push({[filterKeys.per100k]: value ? '1' : '0'});\n    });\n    $('#cb-consistent-y').change(function () {\n      const value = $(this).is(':checked');\n      router.push({[filterKeys.consistentY]: value ? '1' : '0'});\n    });\n    $(document).on('click', function () {\n      hideTooltipSoon();\n    });\n  }\n\n  function renderAllStates() {\n    render({groups: stateData, overview: usData});\n    $('.back-to-states').removeClass('shown');\n    hideTooltip();\n  }\n  function renderCounties(state) {\n    const countiesForState = countyData[state];\n\n    const overviewData = stateData.filter((s) => s.key === state);\n    const stateFips = overviewData ? overviewData[0].values[0].fips : null;\n\n    render({\n      groups: countiesForState.counties,\n      overview: overviewData,\n      isCounties: true,\n      stateFips,\n    });\n\n    $('.back-to-states').addClass('shown');\n    hideTooltip();\n  }\n\n  const resizeWindow = throttle(() => {\n    if (lastData) {\n      render(lastData);\n    }\n  }, 100);\n  window.addEventListener('resize', resizeWindow);\n\n  function fetchMapData() {\n    if (!mapDataPromise) {\n      mapDataPromise = d3.json('assets/us-counties.topojson').then((us) => {\n        stateFeatures = topojson.feature(us, us.objects.states).features;\n        stateBorders = topojson.mesh(us, us.objects.states, (a, b) => a !== b);\n        countyFeatures = topojson.feature(us, us.objects.counties).features;\n      });\n    }\n    return mapDataPromise;\n  }\n\n  function fetchStateData() {\n    if (!stateDataPromise) {\n      stateDataPromise = Promise.all([\n        d3.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv'),\n        d3.csv('assets/fips-pop-sta.csv'),\n        d3.json('https://covidtracking.com/api/v1/states/daily.json'),\n      ]).then(([csv, statePop, testingData]) => {\n        processStates(csv, statePop, testingData);\n\n        // Populate state select\n        const stateOptions = stateData\n          .slice(0)\n          .sort((a, b) => a.key.localeCompare(b.key))\n          .map((s) => `<option value=\"${s.key}\">${s.key}</option>`)\n          .join('');\n        $('#state-select').html(`<option value=\"all\" selected>All States</option>${stateOptions}`);\n        if (filters.state !== 'all') {\n          $('#state-select').val(filters.state);\n        }\n      });\n    }\n    return stateDataPromise;\n  }\n\n  function fetchCountyData() {\n    if (!countyDataPromise) {\n      countyDataPromise = Promise.all([\n        d3.csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv'),\n        d3.csv('assets/fips-pop-cty.csv'),\n      ]).then(([csv, countyPop]) => {\n        processCounties(csv, countyPop);\n      });\n    }\n    return countyDataPromise;\n  }\n\n  function fetchAndRenderStates() {\n    stateDataPromise.then(() => renderAllStates());\n  }\n\n  function fetchAndRenderCounties(state) {\n    Promise.all([stateDataPromise, fetchCountyData()]).then(() => renderCounties(state));\n  }\n\n  fetchStateData();\n  if (filters.state === 'all') {\n    fetchAndRenderStates();\n    // Fetch this in background so its ready immediately when they click on a county\n    setTimeout(fetchCountyData, 200);\n  } else {\n    fetchAndRenderCounties(filters.state);\n  }\n\n  attachEvents();\n})();\n"],"sourceRoot":""}