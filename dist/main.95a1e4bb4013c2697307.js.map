{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isTouchDevice","document","documentElement","$","body","addClass","stateData","countyData","usData","lastData","stateToFipsMap","stateFeatures","stateBorders","countyFeatures","filters","state","field","time","useLog","per100k","consistentY","firstCasesDate","Date","lastCasesDate","tooltipValue","tooltipShown","tooltipHideTimer","isTestingData","dataPointLabels","cases","deaths","tests","positive","pending","negative","newCases","newDeaths","newTests","newPositive","newNegative","pop","keys","forEach","k","per100kKey","mapDataPointLabels","indexOf","replace","fieldHasMovingAverage","timeLabels","all","countyLabelToFips","populationOverrides","fipsRemapping","filterKeys","filterDefaults","parseQs","qs","query","substring","vars","split","obj","map","decodeURIComponent","v","router","hist","this","history","listen","parse","fetchAndRenderStates","fetchAndRenderCounties","firstParse","location","search","qsKey","undefined","val","prop","show","hide","text","_update","action","encodeURIComponent","join","getValueKeys","withTesting","valueKeys","processPopulations","assign","fips","parseInt","processGroups","groups","popMap","hasTesting","group","newRows","row","values","date","year","month","county","parsed","Number","p100kFactor","noPopulation","getTime","filterData","datesToShow","hasTestingData","allValueKeys","concat","maKeys","extents","extentKeys","maStartDate","setDate","getDate","dateAccessor","g","startDate","endDate","last","curDate","valuesIndex","sortedIndexBy","maWindows","isWithinRange","nextValue","matchingValue","maValues","arr","maKey","d3","extent","maValue","filterGridData","memoizeOne","filterOverviewData","mapRenderCount","render","daysToShow","b","a","utc1","utc2","overview","isCounties","stateFips","UTC","getFullYear","getMonth","Math","floor","_MS_PER_DAY","nextDate","unshift","overviewData","gridData","options","$overview","node","getBoundingClientRect","width","height","$cell","select","selectAll","remove","useLarge","innerWidth","yAxisWidth","chartWidth","chartHeight","attr","renderCharts","allowDrilldown","cellLabelX","cellLabelY","barPad","renderOverview","$svg","chartXPadding","chartYPadding","estChartWidth","numCols","numStates","xAxisHeight","winWidth","colWidth","rowHeight","numRows","ceil","totalHeight","sortVal","lastVal","findLast","sort","enter","append","each","numColsForRow","range","col","classed","renderGrid","_mapRenderCount","fetchMapData","then","$map","mapWidth","mapHeight","projection","translate","scale","path","fieldTitle","timeTitle","$g","countyFeaturesFiltered","_stateFips","String","filter","f","id","stateFeaturesFiltered","hasMapData","Boolean","style","joinedData","features","byFips","hasTests","fields","label","positivePct","negativePct","newPending","pendingPct","newPositivePct","newNegativePct","feature","aggMapData","domain","min","colorScale","scaleCluster","mapColors","fillColor","datum","mapNoDataColor","clusters","$item","update","exit","css","formatNumNice","renderMapLegend","$states","transition","duration","isFirstMapRender","$counties","$features","onMouseEnter","evt","showTooltip","title","subtitle","fieldLabels","$backdrop","on","setStateFilter","stopPropagation","hideTooltipSoon","$gSel","bounds","xWidth","yHeight","xCenter","yCenter","max","renderMap","reverse","yScaleType","xScale","rangeRound","paddingInner","paddingOuter","barWidth","bandwidth","barXMidpoints","makeYScale","extentMin","nice","makeAxis","domainMax","numTicks","ticks","tickSizeInner","tickSizeOuter","tickFormat","yScale","yAxis","$cells","counter","index","stackFields","cellYScale","cellYAxis","maField","maExtent","stack","y","isNaN","xOffset","line","x","round","curve","$crosshair","$hover","onMouseMove","onClick","xPos","bisectIndex","left","right","abs","find","chPos","toLocaleString","day","formatTooltipDate","scrollUpTo","formatXDate","clearTimeout","pageX","pageY","clientY","top","bottom","transform","winHeight","innerHeight","bodyHeight","fitsLeft","fitsRight","fitsTop","fitsBottom","dataPoints","hasPercents","columnClass","color","pct","dp","suffix","formatter","formatPer100kValue","dataPointEl","format","formatTooltipValue","dpValue","pctFmt","drilldownMsg","toggleClass","html","setTimeout","hideTooltip","removeClass","precision","abbrev","parseFloat","toPrecision","tooltipFmtPer100k","tooltipFmtPer100kSmall","tooltipFmt","selector","el","querySelector","scrollIntoView","scrollTo","behavior","block","loadingCount","startLoading","completeLoading","resizeWindow","throttle","promise","us","topojson","objects","states","counties","addEventListener","fetchStatePopulationsMemo","Promise","resolve","reject","popCsv","catch","fetchCountyPopulationsMemo","fetchStateDataMemo","timeFilter","file","csv","processed","statePop","entries","populateStateSelect","populated","stateOptions","localeCompare","fetchCountyDataMemo","fetchStateData","timeDir","nestedStates","stateMap","countyPop","byCounty","Error","error","countiesForState","change","click","is"],"mappings":"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","file":"main.95a1e4bb4013c2697307.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"Vtdi\",1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as d3 from 'd3';\nimport scaleCluster from 'd3-scale-cluster';\nimport memoizeOne from 'memoize-one';\nimport throttle from 'lodash/throttle';\nimport findLast from 'lodash/findLast';\nimport sortedIndexBy from 'lodash/sortedIndexBy';\nimport $ from 'jquery';\nimport * as history from 'history';\nimport * as topojson from 'topojson-client';\nimport './style.css';\n\n(function () {\n  const isTouchDevice = 'ontouchstart' in document.documentElement;\n  if (isTouchDevice) {\n    $(document.body).addClass('touch');\n  }\n\n  // Data\n  let stateData = null;\n  let countyData = null;\n  let usData = null;\n  let lastData = null;\n\n  let stateToFipsMap = {};\n\n  // Map features\n  let stateFeatures = null;\n  let stateBorders = null;\n  let countyFeatures = null;\n\n  // Filter values\n  const filters = {\n    state: 'all',\n    field: 'newCases',\n    time: '14d',\n    useLog: false,\n    per100k: false,\n    consistentY: true,\n  };\n\n  // UI state\n  let firstCasesDate = new Date(2020, 0, 21);\n  let lastCasesDate = null;\n  let tooltipValue = null;\n  let tooltipShown = null;\n  let tooltipHideTimer = null;\n  let isTestingData = false;\n\n  ///////////////\n  // Constants //\n  ///////////////\n\n  const dataPointLabels = {\n    cases: 'Total Cases',\n    deaths: 'Total Deaths',\n    tests: 'Total Tests',\n    positive: 'Total Positive',\n    pending: 'Total Pending',\n    negative: 'Total Negative',\n    newCases: 'New Cases',\n    newDeaths: 'New Deaths',\n    newTests: 'New Tests',\n    newPositive: 'New Positive',\n    newNegative: 'New Negative',\n    pop: 'Est. Population',\n  };\n  Object.keys(dataPointLabels).forEach((k) => {\n    dataPointLabels[per100kKey(k)] = dataPointLabels[k];\n  });\n\n  // On the map, \"daily new\" fields are averages\n  const mapDataPointLabels = {...dataPointLabels};\n  Object.keys(mapDataPointLabels).forEach((key) => {\n    if (key.indexOf('new') === 0) {\n      mapDataPointLabels[key] = `Avg ${mapDataPointLabels[key].replace('New', 'Daily')}`;\n    }\n  });\n\n  const fieldHasMovingAverage = {\n    newCases: true,\n    newDeaths: true,\n    [per100kKey('newCases')]: true,\n    [per100kKey('newDeaths')]: true,\n  };\n\n  const timeLabels = {\n    '7d': 'Last 7 days',\n    '14d': 'Last 14 days',\n    '1mo': 'Last 30 days',\n    '90d': 'Last 90 days',\n    all: 'All-time',\n  };\n\n  const MA_NUM_DAYS = 7;\n\n  const KANSAS_CITY_FAKE_FIPS = '29999';\n\n  // https://github.com/nytimes/covid-19-data#geographic-exceptions\n  const countyLabelToFips = {\n    'New York City': '36061',\n    'Kansas City': KANSAS_CITY_FAKE_FIPS,\n  };\n\n  const populationOverrides = {\n    // Kansas City, MO edge cases. City is not a real county, it overlaps\n    // with four other counties. Mayor posted a tweet with population estimates\n    // for the city overall, and the parts of the counties that fall within the city.\n    // https://twitter.com/QuintonLucasKC/status/1249756319805997058\n    [KANSAS_CITY_FAKE_FIPS]: 505604,\n    // Cass County, MO\n    '29037': 103610 - 85,\n    // Jackson County, MO\n    '29095': 700307 - 313870,\n    // Clay County, MO\n    '29047': 246365 - 137446,\n    // Platte County, MO\n    '29165': 102985 - 54202,\n\n    // New York City - Sum of the 5 boroughs due to NYT geographic exception\n    '36061': 8336817,\n  };\n\n  const fipsRemapping = {\n    // Bronx -> NY\n    '36005': '36061',\n    // Kings -> NY,\n    '36047': '36061',\n    // Queens -> NY\n    '36081': '36061',\n    // Richmond -> NY\n    '36085': '36061',\n  };\n\n  ////////////\n  // Router //\n  ////////////\n\n  const filterKeys = {\n    state: 'state',\n    field: 'field',\n    time: 'time',\n    useLog: 'log',\n    per100k: 'per100k',\n    consistentY: 'consistentY',\n  };\n  const filterDefaults = {\n    state: 'all',\n    field: 'newCases',\n    time: '14d',\n    useLog: false,\n    per100k: false,\n    consistentY: true,\n  };\n\n  class Router {\n    constructor(hist) {\n      this.history = hist;\n      this.history.listen(() => {\n        // Update filter state variables and re-render\n        this.parse();\n        if (filters.state === 'all') {\n          fetchAndRenderStates();\n        } else {\n          fetchAndRenderCounties(filters.state);\n        }\n      });\n    }\n\n    parse(firstParse = false) {\n      const qs = parseQs(this.history.location.search);\n      const keys = Object.keys(filterKeys);\n\n      for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        const qsKey = filterKeys[k];\n        let v = qs[qsKey] != undefined ? qs[qsKey] : filterDefaults[k];\n        // Coerce boolean filter values from string to boolean\n        if (typeof filterDefaults[k] === 'boolean' && typeof v === 'string') {\n          v = v === '1';\n        }\n        if (filters[k] === v && !firstParse) {\n          continue;\n        }\n        switch (k) {\n          case 'state': {\n            // Somehow URLs with plus instead of space are being used\n            v = v.replace('+', ' ');\n            filters.state = v;\n            $('#state-select').val(v);\n            break;\n          }\n          case 'field': {\n            if (dataPointLabels[v]) {\n              filters.field = v;\n              $('#field-select').val(v);\n\n              isTestingData = filters.field === 'tests' || filters.field === 'newTests';\n              if (isTestingData) {\n                // Disable useLog if switching to testing data\n                filters.useLog = false;\n                $('#cb-use-log-scale').prop('checked', false);\n                qs[filterKeys.useLog] = '0';\n\n                $('.testing-legend').show();\n                $('#filter-use-log-scale').hide();\n              } else {\n                $('.testing-legend').hide();\n                $('#filter-use-log-scale').show();\n              }\n              if (v === 'newCases' || v === 'newDeaths') {\n                $('.ma-legend .legend-field-label').text(dataPointLabels[v]);\n                $('.ma-legend').show();\n              } else {\n                $('.ma-legend').hide();\n              }\n            }\n            break;\n          }\n          case 'time': {\n            filters.time = v;\n            $('#time-select').val(v);\n            break;\n          }\n          case 'useLog': {\n            filters.useLog = v;\n            $('#cb-use-log-scale').prop('checked', v);\n            break;\n          }\n          case 'per100k': {\n            filters.per100k = v;\n            $('#cb-per-100k').prop('checked', v);\n            break;\n          }\n          case 'consistentY': {\n            filters.consistentY = v;\n            $('#cb-consistent-y').prop('checked', v);\n            break;\n          }\n        }\n      }\n    }\n\n    push(obj) {\n      this._update('push', obj);\n    }\n\n    replace(obj) {\n      this._update('replace', obj);\n    }\n\n    _update(action, obj) {\n      const query = {\n        ...parseQs(this.history.location.search),\n        ...obj,\n      };\n      this.history[action]({\n        search: stringifyQs(query),\n      });\n    }\n  }\n\n  function parseQs(qs) {\n    const query = qs[0] === '?' ? qs.substring(1) : qs;\n    const vars = query ? query.split('&') : [];\n    const obj = {};\n    for (let i = 0; i < vars.length; i++) {\n      const [k, v] = vars[i].split('=').map(decodeURIComponent);\n      obj[k] = v;\n    }\n    return obj;\n  }\n  function stringifyQs(obj) {\n    const result = Object.keys(obj)\n      .map((k) => {\n        return `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`;\n      })\n      .join('&');\n    return result ? `?${result}` : '';\n  }\n  const router = new Router(history.createBrowserHistory());\n  router.parse(true);\n\n  /////////////////////\n  // Data Processing //\n  /////////////////////\n\n  function getValueKeys(withTesting) {\n    const valueKeys = ['cases', 'deaths', 'newCases', 'newDeaths'];\n    if (withTesting) {\n      valueKeys.push(\n        'positive',\n        'negative',\n        'pending',\n        'tests',\n        'newPositive',\n        'newNegative',\n        'newTests',\n      );\n    }\n    return valueKeys;\n  }\n\n  function processStates(csv, popMap) {\n    const nestedStates = d3\n      .nest()\n      .key((k) => k.state)\n      .entries(csv);\n\n    const processed = processGroups(nestedStates, popMap, true);\n\n    stateData = [];\n    processed.forEach((group) => {\n      if (group.key === 'US') {\n        group.key = 'United States';\n        usData = [group];\n      } else {\n        if (!stateToFipsMap[group.key]) {\n          stateToFipsMap[group.key] = group.values[0].fips;\n        }\n        stateData.push(group);\n      }\n    });\n  }\n\n  function coerceNumber(value) {\n    return value == undefined ? null : Number(value);\n  }\n\n  function processCounties(csv, popMap) {\n    // First nest counties by state\n    const nestedStates = d3\n      .nest()\n      .key((k) => k.state)\n      .entries(csv);\n\n    const stateMap = {};\n\n    nestedStates.forEach((state) => {\n      const counties = d3\n        .nest()\n        .key((k) => k.county)\n        .entries(state.values);\n      const byCounty = processGroups(counties, popMap, false);\n      stateMap[state.key] = {key: state.key, counties: byCounty};\n    });\n\n    countyData = stateMap;\n  }\n\n  function processPopulations(pop) {\n    const map = Object.assign({}, populationOverrides);\n    pop.forEach((p) => {\n      const fips = fipsRemapping[p.fips] || p.fips;\n      if (populationOverrides[fips]) {\n        map[fips] = populationOverrides[fips];\n      } else {\n        map[fips] = parseInt(p.pop);\n      }\n    });\n    return map;\n  }\n\n  function processGroups(groups, popMap, hasTesting) {\n    const valueKeys = getValueKeys(hasTesting);\n\n    groups.forEach((group) => {\n      const newRows = [];\n      for (let i = 0; i < group.values.length; i++) {\n        const row = group.values[i];\n        const [year, month, date] = row.date.split('-');\n\n        let fips = row.fips;\n        if (!fips && row.county) {\n          fips = countyLabelToFips[row.county];\n        }\n\n        const parsed = {\n          ...row,\n          fips,\n          date: new Date(Number(year), Number(month) - 1, Number(date)),\n          cases: Number(row.cases),\n          deaths: Number(row.deaths),\n          newCases: Number(row.newCases),\n        };\n        valueKeys.forEach((key) => {\n          parsed[key] = coerceNumber(parsed[key]);\n        });\n\n        newRows.push(parsed);\n\n        // Add population-normalized data\n        const pop = popMap[parsed.fips];\n        if (pop) {\n          parsed.pop = pop;\n          const p100kFactor = pop / 1e5;\n          valueKeys.forEach((key) => {\n            if (typeof parsed[key] === 'number') {\n              parsed[per100kKey(key)] = parsed[key] / p100kFactor;\n            }\n          });\n        } else {\n          group.noPopulation = true;\n        }\n\n        if (lastCasesDate === null || parsed.date.getTime() > lastCasesDate.getTime()) {\n          lastCasesDate = parsed.date;\n        }\n      }\n      group.values = newRows;\n    });\n\n    return groups;\n  }\n\n  function filterData(groups, datesToShow, hasTestingData) {\n    const valueKeys = getValueKeys(hasTestingData);\n    const allValueKeys = valueKeys.concat(valueKeys.map(per100kKey));\n\n    // Keys for which to compute moving averages\n    let maKeys = ['newCases', 'newDeaths'];\n    maKeys = maKeys.concat(maKeys.map(per100kKey));\n\n    const extents = {};\n    const extentKeys = ['date'].concat(allValueKeys);\n    extentKeys.forEach((key) => (extents[key] = [null, null]));\n\n    const maStartDate = new Date(datesToShow[0]);\n    maStartDate.setDate(maStartDate.getDate() - MA_NUM_DAYS);\n\n    const dateAccessor = (v) => v.date.getTime();\n\n    const newGroups = groups.map((g) => {\n      const {values} = g;\n      const newRows = [];\n\n      // Start/end date of the visualized range\n      let startDate = datesToShow[0];\n      let endDate = last(datesToShow);\n      // However we start 7 days before to calculate moving averages\n      let curDate = new Date(maStartDate);\n\n      // Using sortedIndexBy to binary search for the index where our dates start\n      let valuesIndex = sortedIndexBy(values, {date: maStartDate}, dateAccessor);\n\n      // Data structure to store our N-day moving average window for each field\n      let maWindows = {};\n      maKeys.forEach((key) => {\n        maWindows[key] = [];\n      });\n\n      while (curDate.getTime() <= endDate.getTime()) {\n        // Is this date within our visualized range?\n        let isWithinRange = curDate.getTime() >= startDate.getTime();\n\n        // Peek at the next value in our values array – is there a value for the current date?\n        let nextValue = values[valuesIndex];\n        let matchingValue =\n          nextValue && nextValue.date.getTime() === curDate.getTime() ? nextValue : null;\n\n        // First update moving averages\n        let maValues = {};\n        maKeys.forEach((key) => {\n          const arr = maWindows[key];\n          if (arr.length === MA_NUM_DAYS) {\n            arr.shift();\n          }\n          // If there is data for the current date/field combo, use that.\n          if (matchingValue && typeof matchingValue[key] === 'number') {\n            arr.push(nextValue[key]);\n          } else {\n            arr.push(0);\n          }\n          // Store today's moving average as the mean of our moving average window\n          maValues[maKey(key)] = d3.mean(arr);\n        });\n\n        // For dates that will be visualized, push a value into the newRows array\n        if (isWithinRange) {\n          if (matchingValue) {\n            newRows.push(Object.assign({}, matchingValue, maValues));\n          } else {\n            // If there was no matching value for today, all we have is a moving average,\n            // just generate a fake data point with the average values\n            newRows.push(\n              Object.assign(\n                {\n                  date: new Date(curDate),\n                  fips: values[0].fips,\n                  pop: values[0].pop,\n                  state: values[0].state,\n                  county: values[0].county,\n                },\n                maValues,\n              ),\n            );\n          }\n        }\n\n        // If current index of values array was a match for this date, we want to move to next.\n        if (matchingValue) {\n          valuesIndex++;\n        }\n\n        // Make next loop iteration use tomorrow's date\n        curDate.setDate(curDate.getDate() + 1);\n      }\n\n      // Update the extents object\n      newRows.forEach((row) => {\n        extentKeys.forEach((key) => {\n          const extent = extents[key];\n          const value = row[key];\n          if (value != undefined && (extent[0] === null || value < extent[0])) {\n            extent[0] = value;\n          }\n          if (value != undefined && (extent[1] === null || value > extent[1])) {\n            extent[1] = value;\n          }\n          // Account for moving averages in the extent\n          if (fieldHasMovingAverage[key]) {\n            const maValue = row[maKey(key)];\n            if (maValue != undefined && (extent[1] === null || maValue > extent[1])) {\n              extent[1] = maValue;\n            }\n          }\n        });\n      });\n\n      return {\n        ...g,\n        values: newRows,\n      };\n    });\n\n    return {groups: newGroups, extents};\n  }\n\n  const filterGridData = memoizeOne(filterData);\n  const filterOverviewData = memoizeOne(filterData);\n\n  function per100kKey(key) {\n    return `${key}_p100k`;\n  }\n\n  function maKey(key) {\n    return `${key}_ma`;\n  }\n\n  function last(arr) {\n    return arr[arr.length - 1];\n  }\n\n  let mapRenderCount = 0;\n  function render(data) {\n    lastData = data;\n    const {groups, overview, isCounties, stateFips} = data;\n\n    const field = filters.per100k ? per100kKey(filters.field) : filters.field;\n\n    let daysToShow;\n    if (filters.time === '7d') {\n      daysToShow = 7;\n    } else if (filters.time === '14d') {\n      daysToShow = 14;\n    } else if (filters.time === '1mo') {\n      daysToShow = 30;\n    } else if (filters.time === '90d') {\n      daysToShow = 90;\n    } else {\n      daysToShow = dateDiffInDays(lastCasesDate, firstCasesDate);\n    }\n    const datesToShow = [lastCasesDate];\n    for (let i = 1; i < daysToShow; i++) {\n      const nextDate = new Date(lastCasesDate);\n      nextDate.setDate(lastCasesDate.getDate() - i);\n      datesToShow.unshift(nextDate);\n    }\n\n    if (isCounties && isTestingData) {\n      $('#viz').hide();\n      $('.testing-data-unavailable').show();\n      return;\n    } else {\n      $('#viz').show();\n      $('.testing-data-unavailable').hide();\n    }\n\n    const overviewData = filterOverviewData(overview, datesToShow, true);\n    const gridData = filterGridData(groups, datesToShow, !isCounties);\n\n    const options = {\n      field,\n      daysToShow,\n      datesToShow,\n      isCounties,\n      stateFips,\n    };\n\n    renderOverview(overviewData, options);\n    renderGrid(gridData, options);\n\n    // Render map after fetching map data (debounce the render calls)\n    const _mapRenderCount = ++mapRenderCount;\n    fetchMapData().then(() => {\n      if (_mapRenderCount === mapRenderCount) {\n        renderMap(gridData, options);\n      }\n    });\n  }\n\n  function aggMapData(groups, features) {\n    const byFips = {};\n\n    const hasTests = groups[0].values[0].tests != undefined;\n    const fields = getValueKeys(hasTests);\n\n    groups.forEach((group) => {\n      const {values} = group;\n      if (!values.length) {\n        return;\n      }\n      const {fips, pop} = values[0];\n\n      // Just aggregate the number of new cases/etc across the selected time range\n      let value = {\n        fips,\n        pop,\n        label: group.key,\n        // New cases/deaths over last N days\n        cases: d3.sum(values, (v) => v.newCases),\n        deaths: d3.sum(values, (v) => v.newDeaths),\n        // Average of new daily cases/deahts over last N days\n        newCases: d3.mean(values, (v) => v.newCases),\n        newDeaths: d3.mean(values, (v) => v.newDeaths),\n      };\n\n      if (hasTests) {\n        value.tests = d3.sum(values, (v) => v.newTests);\n        value.positive = d3.sum(values, (v) => v.newPositive);\n        value.positivePct = value.positive / value.tests;\n        value.negative = d3.sum(values, (v) => v.newNegative);\n        value.negativePct = value.negative / value.tests;\n        value.pending = d3.sum(values, (v) => v.newPending);\n        value.pendingPct = value.pending / value.tests;\n        value.newTests = d3.mean(values, (v) => v.newTests);\n        value.newPositive = d3.mean(values, (v) => v.newPositive);\n        value.newPositivePct = value.newPositive / value.newTests;\n        value.newNegative = d3.mean(values, (v) => v.newNegative);\n        value.newNegativePct = value.newNegative / value.newTests;\n      }\n\n      const p100kFactor = pop / 1e5;\n      fields.forEach((field) => {\n        if (typeof value[field] === 'number') {\n          value[per100kKey(field)] = value[field] / p100kFactor;\n        }\n      });\n\n      byFips[Number(fips)] = value;\n    });\n\n    return features.map((f) => {\n      const fips = fipsRemapping[f.id] || f.id;\n      const data = byFips[fips];\n      return {\n        id: f.id,\n        feature: f,\n        ...data,\n      };\n    });\n  }\n\n  // https://gka.github.io/palettes/#/7|s|49006a,9b59b6,ffd09f|ffffe0,ff005e,93003a|1|1\n  const mapColors = [\n    '#49006a',\n    '#672682',\n    '#874694',\n    '#a666a0',\n    '#c588a6',\n    '#e3aba6',\n    '#ffd09f',\n  ].reverse();\n  const mapNoDataColor = '#999';\n\n  let isFirstMapRender = true;\n  function renderMap(data, options) {\n    const {field, isCounties, stateFips} = options;\n    const {groups} = data;\n\n    const allowDrilldown = !isCounties;\n\n    const $map = d3.select('#svg-map');\n    const {width, height} = $map.node().getBoundingClientRect();\n    const mapWidth = width;\n    const mapHeight = height;\n\n    const projection = d3\n      .geoAlbersUsa()\n      .translate([mapWidth / 2, mapHeight / 2])\n      .scale(mapWidth);\n    const path = d3.geoPath().projection(projection);\n\n    const fieldTitle = mapDataPointLabels[field];\n    const timeTitle = timeLabels[filters.time];\n    d3.select('#map-title').text(`Map of ${fieldTitle}, ${timeTitle}`);\n\n    const $g = $map.select('#map-g').attr('width', mapWidth).attr('height', mapHeight);\n\n    let countyFeaturesFiltered = [];\n    if (isCounties) {\n      const _stateFips = String(Number(stateFips));\n      countyFeaturesFiltered = countyFeatures.filter((f) => {\n        const fips = String(f.id);\n        return _stateFips === fips.substring(0, fips.length === 4 ? 1 : 2);\n      });\n    }\n\n    let stateFeaturesFiltered = isCounties\n      ? stateFeatures.filter((f) => f.id === Number(stateFips))\n      : stateFeatures;\n\n    const hasMapData = Boolean(stateFeaturesFiltered.length);\n    d3.select('#map-no-data').classed('shown', !hasMapData);\n    d3.select('#viz-map-header').style('opacity', hasMapData ? 1 : 0);\n\n    const joinedData = aggMapData(\n      groups,\n      isCounties ? countyFeaturesFiltered : stateFeaturesFiltered,\n    );\n\n    const domain = [];\n    joinedData.forEach((d) => {\n      const value = d[field];\n      if (typeof value === 'number' && value > 0) {\n        domain.push(value);\n      }\n    });\n    if (domain.length === 0) {\n      domain.push(1);\n    }\n    const min = d3.min(domain);\n    const colorScale = scaleCluster().domain(domain).range(mapColors);\n    const clusters = colorScale.clusters();\n    renderMapLegend(clusters, min);\n\n    function fillColor(d) {\n      const datum = d[field];\n      return datum != undefined && datum !== 0 ? colorScale(datum) : mapNoDataColor;\n    }\n\n    const $states = $g\n      .select('#map-states')\n      .selectAll('.map-state')\n      .data(isCounties ? stateFeaturesFiltered : joinedData, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('opacity', 0).attr('class', 'map-state map-feat'),\n        (update) => update,\n        (exit) => {\n          exit.transition().duration(350).attr('opacity', 0).remove();\n        },\n      );\n\n    $states\n      .attr('d', (d) => path(d.feature))\n      .transition()\n      .duration(isFirstMapRender ? 0 : 350)\n      .attr('opacity', 1)\n      .attr('fill', isCounties ? mapNoDataColor : fillColor);\n\n    const $counties = $g\n      .select('#map-counties')\n      .selectAll('.map-county')\n      .data(isCounties ? joinedData : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('opacity', 0)\n            .attr('class', (d) => `map-county map-county-${d.id} map-feat`),\n        (update) => update,\n        (exit) => {\n          exit.transition().duration(350).attr('opacity', 0).remove();\n        },\n      )\n      .attr('d', (d) => path(d.feature))\n      .attr('fill', fillColor);\n\n    $counties\n      .transition()\n      .duration(isFirstMapRender ? 0 : 350)\n      .attr('opacity', 1);\n\n    $g.select('#map-state-borders')\n      .datum(stateBorders)\n      .attr('d', path)\n      .attr('opacity', isCounties ? 0 : 1);\n\n    const $features = isCounties ? $counties : $states;\n\n    function onMouseEnter(d) {\n      const evt = d3.event;\n      if (d.label) {\n        showMapTooltip({value: d, field, evt, allowDrilldown: allowDrilldown && !isTestingData});\n      }\n    }\n\n    const $backdrop = d3.select('#map-backdrop');\n    $backdrop.attr('width', width).attr('height', height);\n    $backdrop.on('click', () => {\n      if (isCounties) {\n        setStateFilter('all');\n      }\n    });\n\n    if (isTouchDevice) {\n      $features\n        .on('click', (d) => {\n          // Dont let this bubble up to document click\n          d3.event.stopPropagation();\n          onMouseEnter(d);\n        })\n        .on('mouseleave', () => {\n          hideTooltipSoon();\n        });\n    } else {\n      $features\n        .on('click', (d) => {\n          if (allowDrilldown) {\n            setStateFilter(d.label);\n          } else {\n            setStateFilter('all');\n          }\n        })\n        .on('mouseenter', onMouseEnter)\n        .on('mouseleave', () => {\n          hideTooltipSoon();\n        });\n    }\n\n    // Zoom to the correct location (anaimated on subsequent renders)\n    const $gSel = isFirstMapRender ? $g : $g.transition().duration(750);\n    if (isCounties && stateFeaturesFiltered.length) {\n      const bounds = isCounties ? path.bounds(stateFeaturesFiltered[0]) : null;\n      const xWidth = bounds[1][0] - bounds[0][0];\n      const yHeight = bounds[1][1] - bounds[0][1];\n      const xCenter = (bounds[0][0] + bounds[1][0]) / 2;\n      const yCenter = (bounds[0][1] + bounds[1][1]) / 2;\n      const scale = 0.9 / Math.max(xWidth / mapWidth, yHeight / mapHeight);\n      const translate = [mapWidth / 2 - scale * xCenter, mapHeight / 2 - scale * yCenter];\n      $gSel.attr('transform', 'translate(' + translate + ')scale(' + scale + ')');\n    } else {\n      $gSel.attr('transform', 'translate(0)scale(1)');\n    }\n\n    isFirstMapRender = false;\n  }\n\n  function renderMapLegend(clusters, min) {\n    const $legend = d3.select('#map-legend');\n    $legend\n      .selectAll('.map-legend-item')\n      .data([0, min].concat(clusters))\n      .join(\n        (enter) => {\n          const $item = enter.append('div').attr('class', 'map-legend-item');\n          $item.append('div').classed('map-legend-item-label', true);\n          return $item;\n        },\n        (update) => update,\n        (exit) => exit.remove(),\n      )\n      .each(function (d, i) {\n        $(this).css('background-color', i === 0 ? mapNoDataColor : mapColors[i - 1]);\n      })\n      .select('.map-legend-item-label')\n      .text((d) => formatMapLegendTick(d));\n  }\n\n  function renderOverview(data, options) {\n    const $overview = d3.select('#svg-overview');\n    const {width, height} = $overview.node().getBoundingClientRect();\n\n    const $cell = $overview.select('g.cell');\n    $cell.selectAll('*').remove();\n\n    const useLarge = window.innerWidth >= 1024;\n    const yAxisWidth = useLarge ? 40 : 30;\n    const xAxisHeight = useLarge ? 20 : 14;\n    const marginRight = 16;\n    const cellLabelX = 6;\n    const cellLabelY = 0;\n    const chartWidth = width - yAxisWidth - marginRight;\n    const chartHeight = height - xAxisHeight;\n\n    $cell.attr('transform', `translate(${yAxisWidth}, 0)`);\n\n    renderCharts($overview, data, {\n      ...options,\n      allowDrilldown: false,\n      chartWidth,\n      chartHeight,\n      cellLabelX,\n      cellLabelY,\n      barPad: 3,\n    });\n  }\n\n  function renderGrid(data, options) {\n    const {field, daysToShow} = options;\n\n    const $svg = d3.select('#grid');\n    // Make sure  we're starting fresh\n    $svg.selectAll('*').remove();\n    $svg.attr('class', filters.consistentY ? 'consistent-y' : '');\n\n    const groups = data.groups.slice(0);\n\n    const useLarge = window.innerWidth >= 1024;\n    const chartAspectRatio = 2.15;\n    const chartXPadding = useLarge ? 30 : 25;\n    const chartYPadding = useLarge ? 40 : 35;\n    const estChartWidth = useLarge ? 250 : 150;\n    const numCols = Math.floor(window.innerWidth / (estChartWidth + chartXPadding));\n    const chartWidth = Math.floor((window.innerWidth - chartXPadding * (numCols + 1)) / numCols);\n\n    const cellLabelX = -20;\n    const cellLabelY = -10;\n    const numStates = groups.length;\n    const chartHeight = Math.floor(chartWidth / chartAspectRatio);\n    const yAxisWidth = useLarge ? 40 : 30;\n    const xAxisHeight = useLarge ? 20 : 14;\n    const winWidth = window.innerWidth;\n    const barPad = daysToShow > 10 ? 1 : 2;\n\n    const colWidth = chartWidth + chartXPadding;\n    const rowHeight = chartHeight + xAxisHeight + chartYPadding;\n\n    const numRows = Math.ceil(numStates / numCols);\n\n    const totalHeight = numRows * rowHeight;\n\n    const allowDrilldown = !options.isCounties;\n\n    groups.forEach((g) => {\n      if (field.indexOf('new') === 0) {\n        // For daily new cases / deaths, sort by the sum of the data currently being shown\n        g.sortVal = d3.sum(g.values, (v) => v[field]);\n      } else {\n        // Otherwise sort by the last shown cumulative value\n        const lastVal = findLast(g.values, (v) => v[field] != undefined);\n        g.sortVal = lastVal ? lastVal[field] : -1;\n      }\n    });\n    groups.sort((a, b) => b.sortVal - a.sortVal);\n\n    // Create grid of rows and columns\n    const $rows = $svg\n      .attr('viewBox', [0, 0, winWidth, totalHeight])\n      .selectAll('g.row')\n      .data(d3.range(numRows))\n      .enter()\n      .append('g')\n      .attr('class', 'row')\n      .attr('transform', (row) => `translate(${yAxisWidth}, ${row * rowHeight})`);\n\n    // Add cells\n    $rows.each(function (row) {\n      const lastItemNumber = (row + 1) * numCols;\n      const numColsForRow = lastItemNumber > groups.length ? groups.length % numCols : numCols;\n      const range = d3.range(numColsForRow).map((i) => ({row, col: i}));\n      d3.select(this)\n        .selectAll('g.cell')\n        .data(range)\n        .enter()\n        .append('g')\n        .attr('class', 'cell')\n        .classed('cell-clickable', allowDrilldown && !isTestingData)\n        .attr('transform', (d) => `translate(${d.col * colWidth}, 0)`);\n    });\n\n    renderCharts(\n      $svg,\n      {\n        ...data,\n        groups,\n      },\n      {\n        ...options,\n        allowDrilldown,\n        chartWidth,\n        chartHeight,\n        cellLabelX,\n        cellLabelY,\n        barPad,\n      },\n    );\n  }\n\n  function renderCharts($svg, data, options) {\n    const {\n      field,\n      daysToShow,\n      datesToShow,\n      allowDrilldown,\n      chartWidth,\n      chartHeight,\n      cellLabelX,\n      cellLabelY,\n      barPad,\n    } = options;\n    const {groups, extents} = data;\n\n    const yScaleType = filters.useLog ? 'scaleLog' : 'scaleLinear';\n\n    const xScale = d3\n      .scaleBand()\n      .domain(d3.range(datesToShow.length))\n      .rangeRound([0, chartWidth])\n      .paddingInner((barPad * daysToShow) / chartWidth)\n      .paddingOuter((barPad * 5) / chartWidth);\n    const barWidth = xScale.bandwidth();\n\n    const barXMidpoints = datesToShow.map((d, i) => {\n      return xScale(i) + barWidth / 2;\n    });\n\n    function makeYScale(extent) {\n      const domain = [0, Math.max(extent[1], filters.per100k ? 0.1 : 10)];\n      if (filters.useLog) {\n        const extentMin = Math.max(extent[0], 0) || (filters.per100k ? 0.01 : 1);\n        // Make sure domain start is small enough such that even really small numbers show a bar\n        domain[0] = 1;\n        while (domain[0] >= extentMin) {\n          domain[0] /= 10;\n        }\n      }\n      return d3[yScaleType]().domain(domain).range([chartHeight, 0]).nice();\n    }\n\n    function makeAxis(scale) {\n      const domainMax = scale.domain()[1];\n      let numTicks = 4;\n      if (filters.useLog) {\n        if (filters.per100k) {\n          // numTicks > 2 here can create 10+ ticks\n          numTicks = 3;\n        } else {\n          numTicks = domainMax < 100 ? 1 : domainMax < 1000 ? 2 : domainMax < 10000 ? 3 : 4;\n        }\n      }\n      // Make sure there arent too many ticks (happens particularly often with log scale + per100k)\n      while (scale.ticks(numTicks).length > 5) {\n        numTicks--;\n      }\n      return d3\n        .axisLeft(scale)\n        .ticks(numTicks)\n        .tickSizeInner(-chartWidth)\n        .tickSizeOuter(0)\n        .tickFormat((d) => {\n          return formatYTick(d);\n        });\n    }\n    const yScale = makeYScale(extents[field]);\n    const yAxis = makeAxis(yScale);\n\n    const $cells = $svg.selectAll('g.cell');\n\n    // Fill each cell with a chart\n    let counter = 0;\n    $cells.each(function (d, index) {\n      const $cell = d3.select(this);\n      const data = groups[index];\n      if (!data) {\n        return;\n      }\n      counter++;\n      const values = data.values;\n\n      // Add baseline\n      $cell\n        .append('line')\n        .attr('class', 'baseline')\n        .attr('y1', chartHeight)\n        .attr('y2', chartHeight)\n        .attr('x2', chartWidth);\n\n      // Add axis\n      let cellYScale = yScale;\n      let cellYAxis = yAxis;\n      if (!filters.consistentY) {\n        let extent = d3.extent(values, (d) => d[field]);\n        // Account for moving average values in extent\n        if (fieldHasMovingAverage[field]) {\n          const maField = maKey(field);\n          const maExtent = d3.extent(values, (d) => d[maField]);\n          extent = d3.extent(extent.concat(maExtent));\n        }\n        cellYScale = makeYScale(extent);\n        cellYAxis = makeAxis(cellYScale);\n      }\n\n      $cell.append('g').attr('transform', 'translate(0,0)').call(cellYAxis);\n\n      let stackFields;\n      if (isTestingData) {\n        stackFields =\n          filters.field === 'newTests' ? ['newPositive', 'newNegative'] : ['positive', 'negative'];\n        if (filters.per100k) {\n          stackFields = stackFields.map(per100kKey);\n        }\n      } else {\n        stackFields = [field];\n      }\n\n      const stack = d3.stack().keys(stackFields)(values);\n      const $layers = $cell\n        .selectAll('g.layer')\n        .data(stack, (d) => d.key)\n        .enter()\n        .append('g')\n        .attr('class', (d, i) => {\n          return `layer layer-${i + 1} layer-${d.key}`;\n        });\n\n      $layers\n        .selectAll('.bar')\n        .data(\n          (l) => l,\n          (d) => String(d.data.date.getTime()),\n        )\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('width', barWidth)\n        .attr('x', (d, i) => xScale(i))\n        .attr('y', (d) => {\n          const y = Math.floor(cellYScale(d[1]));\n          return Number.isNaN(y) ? chartHeight : y;\n        })\n        .attr('height', (d) => {\n          const y = Math.max(Math.ceil(chartHeight - cellYScale(d[1] - d[0])), 0);\n          return Number.isNaN(y) ? 0 : y;\n        });\n\n      if (fieldHasMovingAverage[field]) {\n        const xOffset = barWidth / 2;\n        const line = d3\n          .line()\n          .x((d, i) => Math.round(xScale(i) + xOffset))\n          .y((d) => {\n            const y = Math.min(Math.floor(cellYScale(d[maKey(field)])), chartHeight);\n            return Number.isNaN(y) ? chartHeight : y;\n          })\n          .curve(d3.curveMonotoneX);\n\n        $cell.append('path').attr('class', 'ma-line').datum(values).attr('d', line);\n      } else {\n        $cell.selectAll('.ma-line').remove();\n      }\n\n      const $crosshair = $cell\n        .append('line')\n        .attr('y1', 0)\n        .attr('y2', chartHeight)\n        .attr('class', 'crosshair crosshair-hidden');\n\n      function onMouseMove() {\n        const evt = d3.event;\n        const mouse = d3.mouse(this);\n        const xPos = mouse[0];\n        const bisectIndex = d3.bisectLeft(barXMidpoints, xPos);\n        const left = barXMidpoints[bisectIndex - 1];\n        const right = barXMidpoints[bisectIndex];\n        const index =\n          left == undefined || Math.abs(xPos - right) < Math.abs(xPos - left)\n            ? bisectIndex\n            : bisectIndex - 1;\n        const date = datesToShow[index];\n        const value = values.find((v) => v.date.getTime() === date.getTime());\n        if (value && (value !== tooltipValue || !tooltipShown)) {\n          const chPos = Math.round(xScale(index) + barWidth / 2);\n          $crosshair.attr('x1', chPos).attr('x2', chPos).classed('crosshair-hidden', false);\n          showChartTooltip({value, field, evt, allowDrilldown: allowDrilldown && !isTestingData});\n        }\n      }\n\n      function onClick() {\n        if (allowDrilldown) {\n          setStateFilter(data.key);\n          scrollUpTo('#viz');\n        }\n      }\n\n      const $hover = $cell\n        .append('rect')\n        .attr('class', 'pointer')\n        .attr('width', chartWidth)\n        .attr('height', chartHeight);\n\n      // Touch device events are slightly different\n      if (isTouchDevice) {\n        $hover.on('click', () => {\n          // Dont let this bubble up to document click\n          d3.event.stopPropagation();\n          onMouseMove.call(this);\n        });\n      } else {\n        $hover.on('mousemove', onMouseMove).on('click', onClick);\n      }\n      $cell.on('mouseleave', () => {\n        $crosshair.classed('crosshair-hidden', true);\n        hideTooltipSoon();\n      });\n\n      // Add label above other elements to make it clickable\n      $cell\n        .append('text')\n        .text(groups.length > 1 ? `${counter}. ${data.key}` : data.key)\n        .attr('x', cellLabelX)\n        .attr('y', cellLabelY)\n        .attr('class', 'cell-label')\n        .on('click', onClick);\n\n      if (filters.per100k && data.noPopulation) {\n        $cell\n          .append('text')\n          .text('No population data')\n          .attr('x', chartWidth / 2)\n          .attr('y', chartHeight / 2)\n          .attr('class', 'cell-label-nopop');\n      }\n    });\n\n    // Add start dates\n    const endDate = last(groups[0].values).date;\n    const startDate = new Date(endDate);\n    startDate.setDate(startDate.getDate() - daysToShow + 1);\n\n    $cells\n      .append('text')\n      .attr('class', 'x-tick x-tick-start')\n      .attr('text-anchor', 'start')\n      .attr('x', 0)\n      .attr('y', chartHeight + 4)\n      .text(formatXDate(startDate));\n\n    $cells\n      .append('text')\n      .attr('class', 'x-tick x-tick-end')\n      .attr('text-anchor', 'end')\n      .attr('x', chartWidth)\n      .attr('y', chartHeight + 4)\n      .text(formatXDate(endDate));\n  }\n\n  function showMapTooltip(options) {\n    const {value} = options;\n    showTooltip({\n      ...options,\n      title: value.label,\n      subtitle: timeLabels[filters.time],\n      fieldLabels: mapDataPointLabels,\n    });\n  }\n\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24;\n  function dateDiffInDays(b, a) {\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n  }\n\n  function showChartTooltip(options) {\n    const {value} = options;\n    showTooltip({\n      ...options,\n      title: formatTooltipDate(value.date),\n      fieldLabels: dataPointLabels,\n    });\n  }\n\n  function showTooltip(options) {\n    clearTimeout(tooltipHideTimer);\n    const {value, field, evt, allowDrilldown, title, subtitle, fieldLabels} = options;\n    tooltipValue = value;\n    tooltipShown = true;\n    const pageX = evt.pageX;\n    const pageY = evt.pageY;\n    const clientY = evt.clientY;\n    const pad = 10;\n    const css = {left: '', right: '', top: '', bottom: '', transform: ''};\n    const winWidth = window.innerWidth;\n    const winHeight = window.innerHeight;\n    const bodyHeight = document.body.getBoundingClientRect().height;\n\n    const fitsLeft = pageX - 250 > 0;\n    const fitsRight = pageX + 250 < winWidth;\n    const fitsTop = clientY - 250 > 0;\n    const fitsBottom = clientY - 250 < winHeight;\n\n    if (fitsTop) {\n      css.bottom = `${bodyHeight - pageY + pad}px`;\n    } else {\n      css.top = `${pageY + pad}px`;\n    }\n\n    if (fitsRight) {\n      css.left = `${pageX + pad}px`;\n    } else if (fitsLeft) {\n      css.right = `${winWidth - pageX + pad}px`;\n    } else if (fitsTop || !fitsBottom) {\n      css.left = pageX;\n      css.transform = 'translateX(-50%)';\n      css.bottom = `${bodyHeight - pageY + pad}px`;\n    } else if (fitsBottom) {\n      css.left = pageX;\n      css.transform = 'translateX(-50%)';\n      css.top = `${pageY + pad}px`;\n    }\n\n    const hasPercents = isTestingData;\n    const columnClass = hasPercents ? 'col-3' : 'col-2';\n\n    let dataPoints;\n    if (filters.field === 'tests') {\n      dataPoints = [\n        {key: 'positive', color: 'primary1', pct: value.positivePct},\n        {key: 'negative', color: 'primary2', pct: value.negativePct},\n        {key: 'pending', pct: value.pendingPct},\n        {key: 'tests'},\n        {key: 'cases'},\n        {key: 'deaths'},\n      ];\n    } else if (filters.field === 'newTests') {\n      dataPoints = [\n        {key: 'newPositive', color: 'primary1', pct: value.newPositivePct},\n        {key: 'newNegative', color: 'primary2', pct: value.newNegativePct},\n        {key: 'newTests'},\n        {key: 'newCases'},\n        {key: 'newDeaths'},\n      ];\n    } else {\n      dataPoints = ['cases', 'deaths', 'newCases', 'newDeaths'].map((k) => ({\n        key: k,\n        color: k === field ? 'primary1' : null,\n      }));\n    }\n    if (filters.per100k) {\n      dataPoints = dataPoints.map((dp) => ({\n        ...dp,\n        key: per100kKey(dp.key),\n        suffix: ' per 100k',\n        formatter: formatPer100kValue,\n      }));\n      if (value.pop != undefined) {\n        dataPoints.push({\n          key: 'pop',\n        });\n      }\n    }\n    const dataPointEl = dataPoints.map((dp) => {\n      const format = dp.formatter || formatTooltipValue;\n      const dpValue = value[dp.key];\n      if (dpValue == undefined) {\n        return '';\n      }\n      return `\n        \t<div class=\"tooltip-dp-label ${dp.color || ''}\">${fieldLabels[dp.key]}</div>\n        \t<div class=\"tooltip-dp-val\">${format(dpValue)}${dp.suffix || ''}</div>\n          ${\n            hasPercents\n              ? `\n            <div class=\"tooltip-dp-pct\">\n              ${formatTooltipPct(dp.pct)}\n            </div>\n          `\n              : ''\n          }\n        \t`;\n    });\n\n    const drilldownMsg = allowDrilldown\n      ? '<div class=\"tooltip-drill\"><span class=\"click\">Click</span><span class=\"tap\">Tap</span><span> to see counties</span></div>'\n      : '';\n\n    $('#tooltip')\n      .addClass('shown')\n      .toggleClass('clickable', allowDrilldown)\n      .css(css)\n      .html(\n        `<div><h4>${title}</h4>\n        ${subtitle ? `<h5>${subtitle}</h5>` : ''}\n              <div class=\"tooltip-grid ${columnClass}\">\n                ${dataPointEl.join('')}\n              </div>\n              ${drilldownMsg}</div>`,\n      );\n  }\n\n  // Sometimes we want to delay hiding to allow user to click into tooltip before it hides (i.e. on mobile)\n  function hideTooltipSoon() {\n    // Long delay needed for iOS safari, otherwise tooltip hides\n    tooltipHideTimer = setTimeout(hideTooltip, isTouchDevice ? 500 : 50);\n  }\n  function hideTooltip() {\n    $('#tooltip').removeClass('shown');\n    tooltipShown = false;\n  }\n\n  function formatXDate(d) {\n    return d.toLocaleString('default', {month: 'short', day: 'numeric'});\n  }\n\n  function formatTooltipDate(d) {\n    return d.toLocaleString('default', {year: 'numeric', month: 'long', day: 'numeric'});\n  }\n\n  function formatYTick(n) {\n    const str = formatNumNice(n);\n    return str.replace(/^0\\./, '.');\n  }\n\n  function formatNumNice(n, precision) {\n    let abbrev;\n    if (n >= 1e6) {\n      n = n / 1e6;\n      abbrev = 'm';\n    } else if (n >= 1e3) {\n      n = n / 1e3;\n      abbrev = 'k';\n    }\n    if (precision !== undefined) {\n      // Need to parseFloat again to avoid scientific notation\n      n = parseFloat(n.toPrecision(precision));\n    }\n    return abbrev ? `${n}${abbrev}` : String(n);\n  }\n\n  const tooltipFmtPer100k = d3.format(',.1f');\n  const tooltipFmtPer100kSmall = d3.format(',.2f');\n  function formatPer100kValue(n) {\n    return n >= 1 ? tooltipFmtPer100k(n) : tooltipFmtPer100kSmall(n);\n  }\n\n  const tooltipFmt = d3.format(',d');\n  function formatTooltipValue(n) {\n    return tooltipFmt(n);\n  }\n\n  function formatMapLegendTick(n) {\n    return formatNumNice(n, 2);\n  }\n\n  const pctFmt = d3.format('.1%');\n  function formatTooltipPct(n) {\n    return n != undefined ? `(${pctFmt(n)})` : '';\n  }\n\n  function setStateFilter(state) {\n    router.push({[filterKeys.state]: state});\n  }\n\n  function scrollUpTo(selector) {\n    const el = document.querySelector(selector);\n    if (!el || !el.scrollIntoView) {\n      window.scrollTo(0, 0);\n    }\n    // Only scroll _up_ to target\n    if (el.getBoundingClientRect().top >= 0) {\n      return;\n    }\n    el.scrollIntoView({behavior: 'smooth', block: 'start'});\n  }\n\n  function attachEvents() {\n    $('#state-select').change(function () {\n      const val = $(this).val();\n      setStateFilter(val);\n    });\n    $('.back-to-states').click(function () {\n      setStateFilter('all');\n      scrollUpTo('#viz-map');\n    });\n    $('#field-select').change(function () {\n      router.push({\n        [filterKeys.field]: $(this).val(),\n      });\n    });\n    $('#time-select').change(function () {\n      router.push({[filterKeys.time]: $(this).val()});\n    });\n    $('#tooltip').click(function (evt) {\n      // Dont let this bubble up to the document.click hide event\n      evt.stopPropagation();\n      if ($(this).is('.clickable') && tooltipValue) {\n        setStateFilter(tooltipValue.state || tooltipValue.label);\n        // Scroll to top if this was a chart (not map) click\n        if (!tooltipValue.label) {\n          scrollUpTo('#viz');\n        }\n      }\n    });\n    $('#cb-use-log-scale').change(function () {\n      const value = $(this).is(':checked');\n      router.push({[filterKeys.useLog]: value ? '1' : '0'});\n    });\n    $('#cb-per-100k').change(function () {\n      const value = $(this).is(':checked');\n      router.push({[filterKeys.per100k]: value ? '1' : '0'});\n    });\n    $('#cb-consistent-y').change(function () {\n      const value = $(this).is(':checked');\n      router.push({[filterKeys.consistentY]: value ? '1' : '0'});\n    });\n    $(document).on('click', function () {\n      hideTooltipSoon();\n    });\n  }\n\n  let loadingCount = 0;\n  function startLoading() {\n    loadingCount++;\n    $('.wrapper').addClass('loading');\n  }\n  function completeLoading() {\n    loadingCount--;\n    if (loadingCount <= 0) {\n      $('.wrapper').removeClass('loading');\n      // Just in case this somehow gets below 0\n      loadingCount = 0;\n    }\n  }\n\n  function renderAllStates() {\n    render({groups: stateData, overview: usData});\n    $('.back-to-states').removeClass('shown');\n    hideTooltip();\n  }\n\n  function renderCounties(state) {\n    const countiesForState = countyData[state];\n\n    const overviewData = stateData.filter((s) => s.key === state);\n    const stateFips = overviewData ? overviewData[0].values[0].fips : null;\n\n    render({\n      groups: countiesForState.counties,\n      overview: overviewData,\n      isCounties: true,\n      stateFips,\n    });\n\n    $('.back-to-states').addClass('shown');\n    hideTooltip();\n  }\n\n  const resizeWindow = throttle(() => {\n    if (lastData) {\n      render(lastData);\n    }\n  }, 100);\n  window.addEventListener('resize', resizeWindow);\n\n  function fetchMapData() {\n    if (!fetchMapData.promise) {\n      fetchMapData.promise = d3.json('assets/us-counties.topojson').then((us) => {\n        stateFeatures = topojson.feature(us, us.objects.states).features;\n        stateBorders = topojson.mesh(us, us.objects.states, (a, b) => a !== b);\n        countyFeatures = topojson.feature(us, us.objects.counties).features;\n      });\n    }\n    return fetchMapData.promise;\n  }\n\n  function populateStateSelect(stateData) {\n    if (populateStateSelect.populated) {\n      return;\n    }\n    populateStateSelect.populated = true;\n\n    const stateOptions = stateData\n      .slice(0)\n      .sort((a, b) => a.key.localeCompare(b.key))\n      .map((s) => `<option value=\"${s.key}\">${s.key}</option>`)\n      .join('');\n    $('#state-select').html(`<option value=\"all\" selected>All States</option>${stateOptions}`);\n    if (filters.state !== 'all') {\n      $('#state-select').val(filters.state);\n    }\n  }\n\n  const fetchStatePopulationsMemo = memoizeOne(() => {\n    return new Promise((resolve, reject) => {\n      d3.csv('assets/fips-pop-sta.csv')\n        .then((popCsv) => {\n          const popMap = processPopulations(popCsv);\n          resolve(popMap);\n        })\n        .catch(reject);\n    });\n  });\n\n  const fetchCountyPopulationsMemo = memoizeOne(() => {\n    return new Promise((resolve, reject) => {\n      d3.csv('assets/fips-pop-cty.csv')\n        .then((popCsv) => {\n          const popMap = processPopulations(popCsv);\n          resolve(popMap);\n        })\n        .catch(reject);\n    });\n  });\n\n  const fetchStateDataMemo = memoizeOne((timeFilter) => {\n    return new Promise((resolve, reject) => {\n      const file = timeFilter === 'all' ? 'all' : '90d';\n      Promise.all([\n        d3.csv(\n          `https://raw.githubusercontent.com/schnerd/covid-tracker-data/master/data/state/${file}.csv`,\n        ),\n        fetchStatePopulationsMemo(),\n      ])\n        .then(([csv, statePop]) => {\n          processStates(csv, statePop);\n          populateStateSelect(stateData);\n          resolve();\n        })\n        .catch(reject);\n    });\n  });\n\n  const fetchCountyDataMemo = memoizeOne((state, timeFilter) => {\n    return new Promise((resolve, reject) => {\n      // Need to fetch state data first to make sure state => fips mapping is ready\n      fetchStateData()\n        .then(() => {\n          const timeDir = timeFilter === 'all' ? 'all' : '90d';\n          const fips = stateToFipsMap[state];\n          if (!fips) {\n            reject(new Error(`Could not find fips for state ${state}`));\n            return;\n          }\n\n          Promise.all([\n            d3.csv(\n              `https://raw.githubusercontent.com/schnerd/covid-tracker-data/master/data/county/${timeDir}/${fips}.csv`,\n            ),\n            fetchCountyPopulationsMemo(),\n          ])\n            .then(([csv, countyPop]) => {\n              processCounties(csv, countyPop);\n              resolve();\n            })\n            .catch(reject);\n        })\n        .catch(reject);\n    });\n  });\n\n  function fetchStateData() {\n    return fetchStateDataMemo(filters.time);\n  }\n\n  function fetchCountyData(state) {\n    return fetchCountyDataMemo(state, filters.time);\n  }\n\n  function fetchAndRenderStates() {\n    startLoading();\n    fetchStateData()\n      .then(() => {\n        renderAllStates();\n        completeLoading();\n      })\n      .catch((error) => {\n        throw new Error(error);\n        completeLoading();\n      });\n  }\n\n  function fetchAndRenderCounties(state) {\n    startLoading();\n    fetchCountyData(state)\n      .then(() => {\n        renderCounties(state);\n        completeLoading();\n      })\n      .catch((error) => {\n        throw new Error(error);\n        completeLoading();\n      });\n  }\n\n  if (filters.state === 'all') {\n    fetchAndRenderStates();\n  } else {\n    fetchAndRenderCounties(filters.state);\n  }\n\n  attachEvents();\n})();\n"],"sourceRoot":""}